{"version":3,"sources":["structure-8.js"],"names":[],"mappings":";;;;;;AAAA;;;;AAKA;;;;AAIA;;;;;AAKA,CAAC,YAAM;AACH,QAAI,UAAU,IAAI,OAAJ,EAAd;AACA,QAAI;AACA,gBAAQ,GAAR,CAAY,CAAZ,EAAe,GAAf;AACH,KAFD,CAEE,OAAO,CAAP,EAAU;AACR,gBAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,WAAxC,EAAqD,CAArD,EAAwD,IAAxD;AACH;AACD,QAAI;AACA,gBAAQ,GAAR,CAAY,OAAO,MAAP,CAAZ,EAA4B,GAA5B;AACH,KAFD,CAEE,OAAO,CAAP,EAAU;AACR,gBAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,WAAxC,EAAqD,CAArD,EAAwD,IAAxD;AACH;AACJ,CAZD;;AAcA;;;;;;;;;;;AAWA,CAAC,YAAM;AACH,QAAI,YAAY,EAAhB;AACA,QAAI,UAAU,IAAI,OAAJ,EAAd;;AAEA,YAAQ,GAAR,CAAY,SAAZ,EAAuB,GAAvB;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,gCAAxC,EAA0E,QAAQ,GAAR,CAAY,SAAZ,CAA1E;AACA,gBAAY,IAAZ;AACA;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,gCAAxC,EAA0E,QAAQ,GAAR,CAAY,SAAZ,CAA1E,EAAkG,IAAlG;AACH,CATD;;AAWA;;;;;;;;AAQA,CAAC,YAAM;AACH,QAAI,YAAY,EAAhB;AACA,QAAI,UAAU,IAAI,OAAJ,EAAd;AACA,YAAQ,GAAR,CAAY,SAAZ,EAAuB,GAAvB;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,qBAAxC,EAA+D,QAAQ,GAAvE;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,sBAAxC,EAAgE,QAAQ,IAAxE;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,wBAAxC,EAAkE,QAAQ,MAA1E;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,yBAAxC,EAAmE,QAAQ,OAA3E;AACH,CARD;;AAUA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,CAAC,YAAM;AACH,QAAI,WAAW,IAAI,OAAJ,EAAf;AACA,QAAI,UAAU,IAAI,OAAJ,EAAd;;AAFG,QAIG,SAJH;AAKC,2BAAY,OAAZ,EAAqB,MAArB,EAA6B;AAAA;;AACzB,qBAAS,GAAT,CAAa,IAAb,EAAmB,OAAnB;AACA,oBAAQ,GAAR,CAAY,IAAZ,EAAkB,MAAlB;AACH;;AARF;AAAA;AAAA,kCAUO;AACF,oBAAI,UAAU,SAAS,GAAT,CAAa,IAAb,CAAd;AACA,oBAAI,UAAU,CAAd,EAAiB;AACjB;AACA,yBAAS,GAAT,CAAa,IAAb,EAAmB,OAAnB;AACA,oBAAI,YAAY,CAAhB,EAAmB;AACf,4BAAQ,GAAR,CAAY,IAAZ;AACH;AACJ;AAlBF;;AAAA;AAAA;;AAoBH,QAAI,QAAQ,CAAZ;AACA,QAAI,YAAY,IAAI,SAAJ,CAAc,KAAd,EAAqB;AAAA,eAAM,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,+BAAxC,CAAN;AAAA,KAArB,CAAhB;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAApB,EAA2B,GAA3B,EAAgC;AAC5B,kBAAU,GAAV;AACH;AACD,gBAAY,IAAZ;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,iCAAxC,EAA2E,SAAS,GAAT,CAAa,SAAb,CAA3E;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,gCAAxC,EAA0E,QAAQ,GAAR,CAAY,SAAZ,CAA1E;AACH,CA5BD","file":"structure-8-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n\n/***************\n * ES6 WeakMap *\n ***************/\n\n/**\n * WeakMap 只接受对象作为 key，除开 null\n * 键名所指向的对象，不计入垃圾回收机制\n */\n\n(() => {\n    let weakMap = new WeakMap();\n    try {\n        weakMap.set(2, 233);\n    } catch (e) {\n        console.log(\"[structure]  [test-\" + 1 + \"]  [e] = \", e, '\\n');\n    }\n    try {\n        weakMap.set(Symbol('save'), 233);\n    } catch (e) {\n        console.log(\"[structure]  [test-\" + 1 + \"]  [e] = \", e, '\\n');\n    }\n})();\n\n/**\n * WeakMap 的设计目的在于，键名是对象的弱引用（垃圾回收机制不将该引用考虑在内）\n * 所以其所对应的对象可能会被自动回收\n * 当对象被回收后，WeakMap 自动移除对应的键值对\n *\n * 一个对应 DOM 元素的 WeakMap 结构\n * 当某个 DOM 元素被清除，其所对应的 WeakMap 记录就会自动被移除\n * 基本上，WeakMap 的专用场合就是，它的键所对应的对象，可能会在将来消失\n *\n * WeakMap 结构有助于防止内存泄漏\n */\n(() => {\n    var objectKey = {};\n    let weakMap = new WeakMap();\n\n    weakMap.set(objectKey, 233);\n    console.log(\"[structure]  [test-\" + 2 + \"]  [weakMap.get(objectKey)] = \", weakMap.get(objectKey));\n    objectKey = null;\n    // 找不到了\n    console.log(\"[structure]  [test-\" + 2 + \"]  [weakMap.get(objectKey)] = \", weakMap.get(objectKey), '\\n');\n})();\n\n/**\n * WeakMap 与 Map 在 API 上的区别主要是两个：\n * 一：是没有遍历操作。没有 key()、values()、entries()\n * 二：无法清空，即不支持 clear 方法\n *\n * 因为 WeakMap 的键不被计入引用、被垃圾回收机制忽略有关\n * 所以，WeakMap 只有四个方法：get()、set()、has()、delete()\n */\n(() => {\n    var objectKey = {};\n    let weakMap = new WeakMap();\n    weakMap.set(objectKey, 233);\n    console.log(\"[structure]  [test-\" + 3 + \"]  [weakMap.key] = \", weakMap.key);\n    console.log(\"[structure]  [test-\" + 3 + \"]  [weakMap.size] = \", weakMap.size);\n    console.log(\"[structure]  [test-\" + 3 + \"]  [weakMap.values] = \", weakMap.values);\n    console.log(\"[structure]  [test-\" + 3 + \"]  [weakMap.entries] = \", weakMap.entries);\n})();\n\n/**\n * WeakMap 应用的典型场合就是 DOM 节点作为键名\n *\n * 每当发生 click 事件，就更新一下状态\n * 当这个 DOM 节点被移除时，相应的状态也会被移除\n */\n// (() => {\n//     let element = document.getElementById('banner');\n//     let weakMap = new WeakMap();\n//\n//     weakMap.set(element, {timesClicked: 0});\n//\n//     element.addEventListener('click', function () {\n//         let bannerData = weakMap.get(element);\n//         bannerData.timesClicked++;\n//     }, false);\n// })();\n\n/**\n * 作用：私有属性\n */\n(() => {\n    let _counter = new WeakMap();\n    let _action = new WeakMap();\n\n    class Countdown {\n        constructor(counter, action) {\n            _counter.set(this, counter);\n            _action.set(this, action);\n        }\n\n        dec() {\n            let counter = _counter.get(this);\n            if (counter < 1) return;\n            counter--;\n            _counter.set(this, counter);\n            if (counter === 0) {\n                _action.get(this)();\n            }\n        }\n    }\n    let LIMIT = 7;\n    let countdown = new Countdown(LIMIT, () => console.log(\"[structure]  [test-\" + 4 + \"]  [Countdown#dec]   time out\"));\n    for (let i = 0; i < LIMIT; i++) {\n        countdown.dec();\n    }\n    countdown = null;\n    console.log(\"[structure]  [test-\" + 4 + \"]  [_counter.get(countdown)] = \", _counter.get(countdown));\n    console.log(\"[structure]  [test-\" + 4 + \"]  [_action.get(countdown)] = \", _action.get(countdown));\n})();"]}