{"version":3,"sources":["proxy-2.js"],"names":[],"mappings":"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","file":"proxy-2-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/****************************\n * ES6 Proxy 代理 get 的场景 *\n ****************************/\n\n/**\n * 如果一个对象的属性不存在，访问的话会得到 undefined\n * 但是，我们希望抛出一个错误\n */\n(() => {\n    let camnter = {\n        save: 'Save you from anything'\n    };\n    var camnterProxy = new Proxy(camnter, {\n        get: function (target, propertyKey, receiver) {\n            if (propertyKey in target) {\n                return target[propertyKey];\n            } else {\n                throw  new ReferenceError(\"Property \\\"\" + propertyKey + \"\\\" does not exist.\");\n            }\n        }\n    });\n    console.log(\"[proxy]  [test-\" + 1 + \"]  [camnter.save] = \", camnterProxy.save);\n    try {\n        console.log(\"[proxy]  [test-\" + 1 + \"]  [camnter.name] = \", camnterProxy.name);\n    } catch (exception) {\n        console.log(\"[proxy]  [test-\" + 1 + \"]  [camnter.name # Exception] = \", exception, '\\n');\n    }\n})();\n\n/**\n * 覆写 get 方法\n * 这里就打点 log\n */\n(() => {\n    let overrideGet = new Proxy({}, {\n        tag: 'overrideGet # ',\n        get: function (target, propertyKey, receiver) {\n            console.log(\"[proxy]  [test-\" + 2 + \"]  [overrideGet # propertyKey] = \", propertyKey);\n            return Reflect.get(target, propertyKey, receiver);\n        }\n    });\n    let object = Object.create(overrideGet);\n    object.save;\n})();\n\n/**\n * 实现 负数索引 的数组\n */\n(() => {\n    function createSmartArray(...elements) {\n        let minusIndexArrayHandler = {\n            get: function (target, propertyKey, receiver) {\n                var index = Number(propertyKey);\n                return Reflect.get(\n                    target,\n                    index < 0 ?\n                        String(index + target.length) :\n                        propertyKey,\n                    receiver);\n            }\n        };\n        let target = [];\n        target.push(...elements);\n        return new Proxy(target, minusIndexArrayHandler);\n    }\n\n    let array = createSmartArray(0, 1, 2, 3, 4, 5);\n    console.log(\"[proxy]  [test-\" + 3 + \"]  [array[-1]] = \", array[-1]);\n    console.log(\"[proxy]  [test-\" + 3 + \"]  [array[-2]] = \", array[-2], '\\n');\n})();\n\n/**\n * 利用 Proxy，可以将读取属性的操作（get），转变为执行某个函数，从而实现属性的\n *\n * 链式操作\n */\n(() => {\n\n    // 无 window 版本\n\n    var double = n => n * 2;\n    var pow = n => n * n;\n    var reverseInt = n => n.toString().split(\"\").reverse().join(\"\") | 0;\n\n    let pipeMap = new Map();\n    pipeMap.set(double.name, double);\n    pipeMap.set(pow.name, pow);\n    pipeMap.set(reverseInt.name, reverseInt);\n\n    var pipe = (function () {\n        return function (value) {\n            var funcStack = [];\n            var proxy = new Proxy({}, {\n                get: function (target, propertyKey, receiver) {\n                    if (propertyKey === 'get') {\n                        return funcStack.reduce(function (previousFunction, currentFunction) {\n                            return currentFunction(previousFunction);\n                        }, value);\n                    }\n                    funcStack.push(pipeMap.get(propertyKey));\n                    return proxy;\n                }\n            });\n            return proxy;\n        }\n    }());\n    console.log(\"[proxy]  [test-\" + 4 + \"]  [pipe(3).double.pow.reverseInt.get] = \", pipe(3).double.pow.reverseInt.get, '\\n');\n})();\n\n(() => {\n    // 有 window 版本\n\n    var double = n => n * 2;\n    var pow = n => n * n;\n    var reverseInt = n => n.toString().split(\"\").reverse().join(\"\") | 0;\n\n    var pipe = (function () {\n        return function (value) {\n            var funcStack = [];\n            var proxy = new Proxy({}, {\n                get: function (target, propertyKey, receiver) {\n                    if (propertyKey === 'get') {\n                        return funcStack.reduce(function (previousFunction, currentFunction) {\n                            return currentFunction(previousFunction);\n                        }, value);\n                    }\n                    funcStack.push(window[propertyKey]);\n                    return proxy;\n                }\n            });\n            return proxy;\n        }\n    }());\n})();\n\n/**\n * 实现一个生成各种 DOM 节点的通用函数 dom\n */\n(() => {\n\n    const dom = new Proxy({}, {\n        get(target, property) {\n            return function (attrs = {}, ...children) {\n                const el = document.createElement(property);\n                for (let prop of Object.keys(attrs)) {\n                    el.setAttribute(prop, attrs[prop]);\n                }\n                for (let child of children) {\n                    if (typeof child === 'string') {\n                        child = document.createTextNode(child);\n                    }\n                    el.appendChild(child);\n                }\n                return el;\n            }\n        }\n    });\n\n    // const element = dom.div({},\n    //     'Save you from anything',\n    //     dom.a({href: 'https://www.camnter.com'}, 'Mark'),\n    //     '. Save',\n    //     dom.ul({},\n    //         dom.li({}, 'you'),\n    //         dom.li({}, 'from'),\n    //         dom.li({}, 'anything')\n    //     )\n    // );\n\n    // document.body.appendChild(element);\n\n})();\n\n/**\n * 屏蔽 Proxy\n *\n * 如果一个属性不可配置（configurable）和不可写（writable）\n * 则该属性不能被代理，通过 Proxy 对象访问该属性会报错\n */\n(() => {\n    const target = Object.defineProperties({}, {\n        save: {\n            value: 'Save you from anything',\n            writable: false,\n            configurable: false\n        },\n    });\n    const handler = {\n        get(target, propertyKey, receiver) {\n            return 'Handler # Save you from anything';\n        }\n    };\n    const proxy = new Proxy(target, handler);\n    try {\n        // 不屏蔽的话，就返回 Handler # Save you from anything\n        proxy.save;\n    } catch (e) {\n        console.log(\"[proxy]  [test-\" + 5 + \"]  [e] = \", e);\n    }\n})();\n"]}