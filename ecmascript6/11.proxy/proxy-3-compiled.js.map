{"version":3,"sources":["proxy-3.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;;AAIA;;;;AAIA;;;AAGA,CAAC,YAAM;AACH,QAAI,YAAY;AACZ,WADY,eACR,MADQ,EACA,WADA,EACa,KADb,EACoB,QADpB,EAC8B;AACtC,gBAAI,gBAAgB,MAAhB,IACA,SAAS,IADb,EACmB;AACf,sBAAM,IAAI,SAAJ,CAAc,sBAAd,CAAN;AACH,aAHD,MAGO;AACH,uBAAO,QAAQ,GAAR,CAAY,MAAZ,EAAoB,WAApB,EAAiC,KAAjC,EAAwC,QAAxC,CAAP;AACH;AACJ;AARW,KAAhB;AAUA,QAAI,UAAU,IAAI,KAAJ,CAAU,EAAV,EAAc,SAAd,CAAd;AACA,YAAQ,IAAR,GAAe,+BAAf;AACA,YAAQ,GAAR,CAAY,oBAAoB,CAApB,GAAwB,sBAApC,EAA4D,QAAQ,IAApE;AACA,QAAI;AACA,gBAAQ,IAAR,GAAe,IAAf;AACH,KAFD,CAEE,OAAO,CAAP,EAAU;AACR,gBAAQ,GAAR,CAAY,oBAAoB,CAApB,GAAwB,WAApC,EAAiD,CAAjD;AACH;AACJ,CAnBD;;AAqBA;;;;;;AAMA,CAAC,YAAM;AACH,QAAI,UAAU;AACV,WADU,eACN,MADM,EACE,WADF,EACe,QADf,EACyB;AAC/B,iBAAK,SAAL,CAAe,WAAf,EAA4B,KAA5B;AACA,mBAAO,QAAQ,GAAR,CAAY,MAAZ,EAAoB,WAApB,EAAiC,QAAjC,CAAP;AACH,SAJS;AAKV,WALU,eAKN,MALM,EAKE,WALF,EAKe,KALf,EAKsB,QALtB,EAKgC;AACtC,iBAAK,SAAL,CAAe,WAAf,EAA4B,KAA5B;AACA,oBAAQ,GAAR,CAAY,MAAZ,EAAoB,WAApB,EAAiC,KAAjC,EAAwC,QAAxC;AACH,SARS;AASV,iBATU,qBASC,GATD,EASM,MATN,EASc;AACpB,gBAAI,IAAI,CAAJ,MAAW,GAAf,EAAoB;AAChB,sBAAM,IAAI,KAAJ,yBAAgC,MAAhC,kBAAmD,GAAnD,gBAAN;AACH;AACJ;AAbS,KAAd;AAeA,QAAI,QAAQ,IAAI,KAAJ,CAAU;AAClB,eAAO;AADW,KAAV,EAET,OAFS,CAAZ;AAGA,QAAI;AACA,cAAM,KAAN;AACH,KAFD,CAEE,OAAO,CAAP,EAAU;AACR,gBAAQ,GAAR,CAAY,oBAAoB,CAApB,GAAwB,WAApC,EAAiD,CAAjD,EAAoD,IAApD;AACH;AACD,QAAI;AACA,gBAAQ,GAAR,CAAY,oBAAoB,CAApB,GAAwB,qBAApC,EAA2D,MAAM,KAAjE,EAAwE,IAAxE;AACH,KAFD,CAEE,OAAO,CAAP,EAAU;AACR,gBAAQ,GAAR,CAAY,oBAAoB,CAApB,GAAwB,WAApC,EAAiD,CAAjD,EAAoD,IAApD;AACH;AACJ,CA7BD","file":"proxy-3-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/****************************\n * ES6 Proxy 代理 set 的场景 *\n ****************************/\n\n/**\n * set 方法用来拦截某个属性的赋值操作\n */\n\n/**\n * 设置属性不为 null\n */\n(() => {\n    let validator = {\n        set(target, propertyKey, value, receiver) {\n            if (propertyKey === 'save' &&\n                value == null) {\n                throw new TypeError('The save is not null');\n            } else {\n                return Reflect.set(target, propertyKey, value, receiver);\n            }\n        }\n    }\n    let camnter = new Proxy({}, validator);\n    camnter.save = 'save - Save you from anything';\n    console.log(\"[proxy]  [test-\" + 1 + \"]  [camnter.save] = \", camnter.save);\n    try {\n        camnter.save = null;\n    } catch (e) {\n        console.log(\"[proxy]  [test-\" + 1 + \"]  [e] = \", e);\n    }\n})();\n\n/**\n * 屏蔽外部调用 _xxx 属性\n *\n * 属性名的第一个字符使用下划线开头，表示这些属性不应该被外部使用\n * 结合 get 和 set 方法，就可以做到防止这些内部属性被外部读写\n */\n(() => {\n    let handler = {\n        get(target, propertyKey, receiver) {\n            this.invariant(propertyKey, 'get');\n            return Reflect.get(target, propertyKey, receiver);\n        },\n        set(target, propertyKey, value, receiver) {\n            this.invariant(propertyKey, 'set');\n            Reflect.set(target, propertyKey, value, receiver);\n        },\n        invariant (key, action) {\n            if (key[0] === '_') {\n                throw new Error(`Invalid attempt to ${action} private \"${key}\" property`);\n            }\n        }\n    };\n    let proxy = new Proxy({\n        _save: 'Save you from anything'\n    }, handler);\n    try {\n        proxy._save;\n    } catch (e) {\n        console.log(\"[proxy]  [test-\" + 2 + \"]  [e] = \", e, '\\n');\n    }\n    try {\n        console.log(\"[proxy]  [test-\" + 2 + \"]  [proxy._save] = \", proxy._save, '\\n');\n    } catch (e) {\n        console.log(\"[proxy]  [test-\" + 2 + \"]  [e] = \", e, '\\n');\n    }\n})();"]}