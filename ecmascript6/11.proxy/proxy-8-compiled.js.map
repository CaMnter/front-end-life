{"version":3,"sources":["proxy-8.js"],"names":[],"mappings":"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","file":"proxy-8-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/*********************************\n * ES6 Proxy 代理 ownKeys 的场景 *\n ********************************/\n\n/**\n * ownKeys 方法会拦截：\n *\n * Object.getOwnPropertyNames()\n * Object.getOwnPropertySymbols()\n * Object.keys()\n */\n(() => {\n    let target = {\n        name: 'CaMnter',\n        save: 'Save you from anything'\n    };\n    let proxy = new Proxy(target, {\n        count: 0,\n        ownKeys(target){\n            console.log(\"[proxy]  [test-\" + 1 + \"]  [ownKeys]  [count] = \", ++this.count);\n            return ['???'];\n        }\n    });\n    Object.keys(proxy);\n    Object.getOwnPropertyNames(proxy);\n    Object.getOwnPropertySymbols(proxy);\n    console.log('');\n})();\n\n/**\n * 实例：过滤掉 下划线 属性\n */\n(() => {\n    let target = {\n        save: 'save',\n        _save: '_save'\n    };\n    let proxy = new Proxy(target, {\n        ownKeys(target){\n            return Reflect.ownKeys(target).filter(key => key[0] !== '_');\n        }\n    });\n    console.log(\"[proxy]  [test-\" + 2 + \"]  [Object.keys(proxy)] = \", Object.keys(proxy), '\\n');\n})();\n\n\n/**\n * 在使用 Object.keys() 的时候\n * ownKeys 方法自动过滤：\n *\n * 不存在的属性\n * 属性名为 Symbol\n * 不可遍历（enumerable）的属性\n */\n(() => {\n    let target = {\n        name: 'CaMnter',\n        save: 'Save you from anything',\n        [Symbol.for('save')]: 'symbol'\n    };\n\n    Object.defineProperty(target, 'you', {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: 'you'\n    });\n\n    let proxy = new Proxy(target, {\n        ownKeys(target){\n            // 不存在的属性、属性名为 Symbol、不可遍历（enumerable）的属性\n            return ['name', 'save', Symbol.for('save'), 'you'];\n        }\n    });\n    console.log(\"[proxy]  [test-\" + 3 + \"]  [Object.keys(proxy)] = \", Object.keys(proxy), '\\n');\n})();\n\n/**\n * 如果目标对象自身包含不可配置的属性 configurable = false\n *\n * 则该属性必须被 ownKeys 方法返回，否则报错\n */\n(() => {\n    let target = {};\n    Object.defineProperty(target, 'you', {\n        configurable: false,\n        enumerable: false,\n        value: 'you'\n    });\n    let proxy = new Proxy(target, {\n        ownKeys(target){\n            return [];\n        }\n    });\n    try {\n        console.log(\"[proxy]  [test-\" + 4 + \"]  [Object.keys(proxy)] = \", Object.keys(proxy), '\\n');\n    } catch (e) {\n        console.log(\"[proxy]  [test-\" + 4 + \"]  [e] = \", e, '\\n');\n    }\n})();\n\n/**\n * 如果目标对象是不可扩展的（non-extension）\n * 这时 ownKeys 方法返回的数组之中，必须包含原对象的所有属性，且不能包含多余的属性，否则报错\n */\n(() => {\n    let target = {\n        save:'save'\n    };\n    Object.preventExtensions(target);\n    let proxy = new Proxy(target,{\n        ownKeys(target){\n            return ['_save'];\n        }\n    });\n    try {\n        console.log(\"[proxy]  [test-\" + 5 + \"]  [Object.keys(proxy)] = \", Object.keys(proxy), '\\n');\n    } catch (e) {\n        console.log(\"[proxy]  [test-\" + 5 + \"]  [e] = \", e, '\\n');\n    }\n})();"]}