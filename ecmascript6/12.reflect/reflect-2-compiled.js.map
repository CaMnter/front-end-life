{"version":3,"sources":["reflect-2.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;;AAIA,CAAC,YAAM;;AAEH,QAAM,kBAAkB,IAAI,GAAJ,EAAxB;AACA,QAAM,UAAU,SAAV,OAAU;AAAA,eAAQ,gBAAgB,GAAhB,CAAoB,IAApB,CAAR;AAAA,KAAhB;AACA,QAAM,aAAa,SAAb,UAAa;AAAA,eAAU,IAAI,KAAJ,CAAU,MAAV,EAAkB,EAAC,QAAD,EAAlB,CAAV;AAAA,KAAnB;;AAEA;AACA;AACA,aAAS,GAAT,CAAa,MAAb,EAAqB,GAArB,EAA0B,KAA1B,EAAiC,QAAjC,EAA2C;AACvC,YAAM,SAAS,QAAQ,GAAR,CAAY,MAAZ,EAAoB,GAApB,EAAyB,KAAzB,EAAgC,QAAhC,CAAf;AACA,wBAAgB,OAAhB,CAAwB;AAAA,mBAAY,UAAZ;AAAA,SAAxB;AACA,eAAO,MAAP;AACH;;AAED,QAAM,UAAU,WAAW;AACvB,cAAM,SADiB;AAEvB,aAAK;AAFkB,KAAX,CAAhB;;AAKA,aAAS,WAAT,GAAuB;AACnB,gBAAQ,GAAR,CAAe,QAAQ,IAAvB,UAAgC,QAAQ,GAAxC;AACH;;AAED;AACA,YAAQ,WAAR;AACA,YAAQ,GAAR,GAAc,IAAd;AAEH,CA3BD","file":"reflect-2-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/*********************************\n * Reflect + Proxy 实现观察者模式 *\n *********************************/\n\n(() => {\n\n    const queuedObservers = new Set();\n    const observe = func => queuedObservers.add(func);\n    const observable = target => new Proxy(target, {set});\n\n    // Proxy set 监听 set\n    // 如果观察到调用了 set ，遍历 方法集合，一个一个方法调用\n    function set(target, key, value, receiver) {\n        const result = Reflect.set(target, key, value, receiver);\n        queuedObservers.forEach(observer => observer());\n        return result;\n    }\n\n    const camnter = observable({\n        name: 'CaMnter',\n        age: 23\n    });\n\n    function showCaMnter() {\n        console.log(`${camnter.name}, ${camnter.age}`)\n    }\n\n    // 添加观察方法到 方法集合里\n    observe(showCaMnter);\n    camnter.age = 2233;\n\n})();"]}