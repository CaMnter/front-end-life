{"version":3,"sources":["iterator-5.js"],"names":[],"mappings":"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","file":"iterator-5-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/*****************\n * 类似数组的对象 *\n *****************/\n\n/**\n * 正确识别 32 位 UTF-16 字符\n */\n(() => {\n    for (let value of 'z\\uD83D\\uDC0A') {\n        console.log(\"[iterator]  [test-\" + 1 + \"]  [value] = \", value);\n    }\n    console.log('');\n})();\n\n/**\n * 类似数组的对象\n */\n(() => {\n    let arrayLike = {length: 4, 0: 'save', 1: 'you', 2: 'from', 3: 'anything'};\n    // 报错\n    try {\n        for (let value of arrayLike) {\n        }\n    } catch (e) {\n        console.log(\"[iterator]  [test-\" + 2 + \"]  [e] = \", e);\n    }\n    for (let value of Array.from(arrayLike)) {\n        console.log(\"[iterator]  [test-\" + 2 + \"]  [value] = \", value);\n    }\n    console.log('');\n})();\n\n\n/********\n * 对象 *\n ********/\n\n/**\n * for...of 不能遍历对象\n * for...in 能拿到对象的属性名，相当于 keys\n */\n\n/**\n * for...in 配合对象本身去遍历对象属性值\n *\n * 或者\n *\n * 对象.keys() + for...of\n */\nlet camnter = {\n    s: 'save',\n    y: 'you',\n    f: 'from',\n    a: 'anything'\n};\n(() => {\n    for (let key in camnter) {\n        console.log(\"[iterator]  [test-\" + 3 + \"]  [key] = \", key, \"  [value] = \", camnter[key]);\n    }\n\n    // Object.keys(target) + for...of\n    for (let key of Object.keys(camnter)) {\n        console.log(\"[iterator]  [test-\" + 3 + \"]  [key] = \", key, \"  [value] = \", camnter[key]);\n    }\n    console.log('');\n})();\n\n/**\n * 用 Generator 包装对象\n */\n(() => {\n    function* entries(object) {\n        for (let key of Object.keys(object)) {\n            yield [key, object[key]];\n        }\n    }\n\n    for (let [key, value] of entries(camnter)) {\n        console.log(\"[iterator]  [test-\" + 4 + \"]  [key] = \", key, \"  [value] = \", camnter[key]);\n    }\n})();\n\n\n/********\n * 比较 *\n ********/\n\n/**\n * forEach 无法中途跳出，break 命令或 return 命令都不行\n * for...in 循环主要是为遍历对象而设计的，不适用于遍历数组\n *\n * for...of 除了遍历没有实现 Iterator 接口的对象外，都可以快速遍历\n *\n * 对于 没有实现 Iterator 接口的对象，可以实现 实现 [Symbol.iterator] （ 作为一个开发必备的设计素养 ）\n * 当然也可以 对象.keys() + for...of\n */"]}