{"version":3,"sources":["promise-2.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;;AAKA;;;;;;;;AAQA;;;AAGA,CAAC,YAAM;AACH,QAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AAC7B,gBAAQ,EAAR;AACH,KAFD,EAEG,IAFH,CAEQ,iBAAS;AACb,eAAO,4BAA4B,KAAnC;AACH,KAJD,EAIG,IAJH,CAIQ,kBAAU;AACd,gBAAQ,GAAR,CAAY,sBAAsB,CAAtB,GAA0B,gBAAtC,EAAwD,MAAxD,EAAgE,IAAhE;AACH,KAND;AAOH,CARD;;AAUA;;;;;;AAMA,CAAC,YAAM;AACH,QAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AAC7B,gBAAQ,IAAR;AACH,KAFD,EAEG,IAFH,CAEQ,gBAAQ;AACZ,YAAI,CAAC,IAAL,EAAU,OAAO,IAAP;AACV,eAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,uBAAW;AAAA,uBAAM,OAAO,IAAI,KAAJ,CAAU,YAAV,CAAP,CAAN;AAAA,aAAX,EAAkD,GAAlD;AACH,SAFM,CAAP;AAGH,KAPD,EAOG,IAPH,CAOQ,iBAAS;AACb;AACA,gBAAQ,GAAR,CAAY,sBAAsB,CAAtB,GAA0B,eAAtC,EAAuD,KAAvD,EAA8D,IAA9D;AACH,KAVD,EAUG,iBAAS;AACR;AACA,gBAAQ,GAAR,CAAY,sBAAsB,CAAtB,GAA0B,iBAAtC,EAAyD,KAAzD,EAAgE,IAAhE;AACH,KAbD;AAcH,CAfD","file":"promise-2-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/**************************\n * Promise.prototype.then *\n **************************/\n\n\n/**\n * Promise 的 then 方法定义在 原型对象 Promise.prototype 上的\n * 它的作用是：为 Promise 实例添加状态改变时的回调方法\n *\n * 第一个参数是 Resolved 状态的回调方法\n * 第二个参数是 Rejected 状态的回调方法\n */\n\n/**\n * then 进行数据转换\n */\n(() => {\n    new Promise((resolve, reject) => {\n        resolve(67);\n    }).then(value => {\n        return 'Save you from anything ' + value;\n    }).then(string => {\n        console.log(\"[promise]  [test-\" + 1 + \"]  [string] = \", string, '\\n');\n    });\n})();\n\n/**\n * 多个 then 返回 Promise\n *\n * 如果 then 返回了 Promise\n * 这个 then 后面的 then 都会等待这个 Promise的状态发生变化后，才会调用\n */\n(() => {\n    new Promise((resolve, reject) => {\n        resolve(true);\n    }).then(call => {\n        if (!call)return null;\n        return new Promise((resolve, reject) => {\n            setTimeout(() => reject(new Error('异空间错误 404 ')), 677);\n        });\n    }).then(value => {\n        // success\n        console.log(\"[promise]  [test-\" + 2 + \"]  [value] = \", value, '\\n');\n    }, error => {\n        // failure\n        console.log(\"[promise]  [test-\" + 2 + \"]  [failure] = \", error, '\\n');\n    });\n})();\n"]}