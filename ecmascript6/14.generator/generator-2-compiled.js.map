{"version":3,"sources":["generator-2.js"],"names":[],"mappings":";;AAAA;;;;AAKA;;;;AAIA;;;;;;AAMA,CAAC,YAAM;AACH,MAAI,SAAS,EAAb;AACA,SAAO,OAAO,QAAd,4BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAChB,MADgB;;AAAA;AAAA;AAAA,mBAEhB,KAFgB;;AAAA;AAAA;AAAA,mBAGhB,MAHgB;;AAAA;AAAA;AAAA,mBAIhB,UAJgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;AAFG;AAAA;AAAA;;AAAA;AAQH,yBAAkB,MAAlB,8HAA0B;AAAA,UAAjB,KAAiB;;AACtB,cAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,eAAxC,EAAyD,KAAzD;AACH;AAVE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWH,UAAQ,GAAR,CAAY,EAAZ;AACH,CAZD;;AAcA;;;;;;AAMA,CAAC,YAAM;AACH,MAAI,oCAAY,SAAZ,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAZ,SAAY;AAAA,GAAZ,CAAJ;AAEA,MAAI,WAAW,WAAf;AACA,UAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,gDAAxC,EAA0F,SAAS,OAAO,QAAhB,QAAgC,QAA1H;AACH,CALD","file":"generator-2-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n\n/*************************\n * Generator 与 Iterator *\n *************************/\n\n/**\n * Symbol.iterator 方法，必须是一个生成 Iterator 的方法\n * Generator 函数就是 Iterator 生成函数\n * 所以 可以作为 Symbol.iterator 的 方法\n */\n\n(() => {\n    let target = {};\n    target[Symbol.iterator] = function*() {\n        yield 'save';\n        yield 'you';\n        yield 'from';\n        yield 'anything'\n    };\n    for (let value of target) {\n        console.log(\"[generator]  [test-\" + 1 + \"]  [value] = \", value);\n    }\n    console.log('');\n})();\n\n/**\n * 值得一提的是\n * Generator 执行后，返回一个 Iterator 对象\n * 这个 Iterator 对象也有 Symbol.iterator 属性\n * 执行这个 Symbol.iterator 属性上的方法后，得到自己\n */\n(() => {\n    let generator = function*() {\n    }\n    let iterator = generator();\n    console.log(\"[generator]  [test-\" + 2 + \"]  [iterator[Symbol.iterator] === iterator] = \", iterator[Symbol.iterator]() === iterator);\n})();"]}