{"version":3,"sources":["generator-9.js"],"names":[],"mappings":"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","file":"generator-9-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\nrequire(\"babel-polyfill\");\n\n/*************************\n * 对象属性上的 Generator *\n *************************/\n\n(() => {\n    let target = {\n        * generatorA(){\n            yield 22;\n        },\n        generatorB: function*() {\n            yield 33;\n        }\n    };\n    console.log(\"[generator]  [test-\" + 1 + \"]  [target.generatorA().next()] = \", target.generatorA().next());\n    console.log(\"[generator]  [test-\" + 1 + \"]  [target.generatorB().next()] = \", target.generatorB().next(), '\\n');\n})();\n\n/*********************\n * Generator 的 this *\n *********************/\n\n/**\n * ES6 规定 Generator 返回的 Iterator 是 Generator 的实例\n * 也继承了 Generator 方法的 prototype 对象上的方法\n */\n\n(() => {\n    function* generatorFunction() {\n    };\n    generatorFunction.prototype.save = function () {\n        return 'save';\n    };\n    let generator = generatorFunction();\n    console.log(\"[generator]  [test-\" + 2 + \"]  [generator instanceof generatorFunction] = \", generator instanceof generatorFunction);\n    console.log(\"[generator]  [test-\" + 2 + \"]  [generator.save()] = \", generator.save(), '\\n');\n})();\n\n/**\n * Generator 作为普通构造函数，this 不会在 Iterator 中生效\n */\n(() => {\n    function* generatorFunction() {\n        this.save = 'save';\n    };\n    let generator = generatorFunction();\n    console.log(\"[generator]  [test-\" + 3 + \"]  [generator instanceof generatorFunction] = \", generator instanceof generatorFunction);\n    console.log(\"[generator]  [test-\" + 3 + \"]  [generator.save] = \", generator.save, '\\n');\n})();\n\n/**\n * 实例：\n * Generator 作为一个对象，又可以 next，又可以获得正常 this\n * 但是：对象不统一\n */\n(() => {\n    function* generatorFunction() {\n        this.save = 'save';\n        yield this.you = 'you';\n    };\n    let target = {};\n    // this = target\n    let generator = generatorFunction.call(target);\n    console.log(\"[generator]  [test-\" + 4 + \"]  [generator.next()] = \", generator.next());\n    console.log(\"[generator]  [test-\" + 4 + \"]  [generator.next()] = \", generator.next());\n    // this 代码，都保存在 target 上了\n    console.log(\"[generator]  [test-\" + 4 + \"]  [target] = \", target);\n    console.log(\"[generator]  [test-\" + 4 + \"]  [target.save] = \", target.save);\n    console.log(\"[generator]  [test-\" + 4 + \"]  [target.you] = \", target.you, '\\n');\n})();\n\n/**\n * 实例：\n * Generator 作为一个对象，又可以 next，又可以获得正常 this\n * 但是：对象统一\n */\n(() => {\n    function* generatorFunction() {\n        this.save = 'save';\n        yield this.you = 'you';\n    };\n    // 传入 自身的 prototype\n    let generator = generatorFunction.call(generatorFunction.prototype);\n    console.log(\"[generator]  [test-\" + 5 + \"]  [generator.next()] = \", generator.next());\n    console.log(\"[generator]  [test-\" + 5 + \"]  [generator.next()] = \", generator.next());\n    console.log(\"[generator]  [test-\" + 5 + \"]  [generator] = \", generator);\n    console.log(\"[generator]  [test-\" + 5 + \"]  [generator.save] = \", generator.save);\n    console.log(\"[generator]  [test-\" + 5 + \"]  [generator.you] = \", generator.you, '\\n');\n})();"]}