{"version":3,"sources":["destructuring-6.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;;QAIgC,E;IAAlB,c,KAAT,Q;;AACL,QAAQ,GAAR,CAAY,8BAA8B,CAA9B,GAAkC,wDAAlC,IAA8F,mBAAmB,OAAO,SAAP,CAAiB,QAAlI,CAAZ;YACiC,I;IAAnB,e,SAAT,Q;;AACL,QAAQ,GAAR,CAAY,8BAA8B,CAA9B,GAAkC,0DAAlC,IAAgG,oBAAoB,QAAQ,SAAR,CAAkB,QAAtI,CAAZ;;AAEA;;;;AAIA;AACA","file":"destructuring-6-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/*************************\n * 数值和布尔值的解构赋值 *\n *************************/\n\nlet {toString:numberToString} = 26;\nconsole.log(\"[destructuring]\\t\\t[test-\" + 1 + \"]\\t\\t[numberToString === Number.prototype.toString] = \" + (numberToString === Number.prototype.toString));\nlet {toString:booleanToString} = true;\nconsole.log(\"[destructuring]\\t\\t[test-\" + 1 + \"]\\t\\t[booleanToString === Boolean.prototype.toString] = \" + (booleanToString === Boolean.prototype.toString));\n\n/**\n * 解构赋值的规则是，只要等号右边的值不是对象，就先将其转为对象。由于 undefined 和 null 无法转为对象，所以\n * 对它们进行解构赋值，都会报错\n */\n// let { prop: v1 } = undefined; // TypeError\n// let { prop: v2 } = null; // TypeError"]}