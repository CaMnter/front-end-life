{"version":3,"sources":["numberic-3.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;;AAIA;;;AAGA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,2BAA5B,GAA0D,KAAK,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAtE;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,qDAA5B,IAAqF,KAAK,GAAL,CAAS,CAAT,EAAY,EAAZ,MAAoB,KAAK,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAA3H,CAAZ;AACA,QAAQ,GAAR,CAAY,EAAZ;;AAEA;;;AAGA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,mCAA5B,GAAkE,OAAO,gBAArF;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,mCAA5B,GAAkE,OAAO,gBAArF;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,kEAA5B,IAAkG,OAAO,gBAAP,KAA4B,CAAC,OAAO,gBAAtI,CAAZ;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,6DAA5B,IAA6F,OAAO,gBAAP,KAA4B,KAAK,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAA3I,CAAZ;AACA,QAAQ,GAAR,CAAY,EAAZ;;AAEA;;;AAGA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,wCAA5B,GAAuE,OAAO,aAAP,CAAqB,MAArB,CAAnF;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,sCAA5B,GAAqE,OAAO,aAAP,CAAqB,IAArB,CAAjF;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,qCAA5B,GAAoE,OAAO,aAAP,CAAqB,GAArB,CAAhF;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0CAA5B,GAAyE,OAAO,aAAP,CAAqB,QAArB,CAArF;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,2CAA5B,GAA0E,OAAO,aAAP,CAAqB,CAAC,QAAtB,CAAtF;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,mCAA5B,GAAkE,OAAO,aAAP,CAAqB,CAArB,CAA9E;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,sCAA5B,GAAqE,OAAO,aAAP,CAAqB,IAArB,CAAjF;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,kDAA5B,GAAiF,OAAO,aAAP,CAAqB,gBAArB,CAA7F;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,kDAA5B,GAAiF,OAAO,aAAP,CAAqB,gBAArB,CAA7F;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,6DAA5B,GAA4F,OAAO,aAAP,CAAqB,OAAO,gBAAP,GAA0B,CAA/C,CAAxG;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,yDAA5B,GAAwF,OAAO,aAAP,CAAqB,OAAO,gBAA5B,CAApG;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,yDAA5B,GAAwF,OAAO,aAAP,CAAqB,OAAO,gBAA5B,CAApG;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,6DAA5B,GAA4F,OAAO,aAAP,CAAqB,OAAO,gBAAP,GAA0B,CAA/C,CAAxG;AACA,QAAQ,GAAR,CAAY,EAAZ;;AAEA;;;AAGA,OAAO,aAAP,GAAuB,UAAU,CAAV,EAAa;AAChC,SAAQ,OAAO,CAAP,KAAa,QAAb,IACR,KAAK,KAAL,CAAW,CAAX,MAAkB,CADV,IAER,OAAO,gBAAP,IAA2B,CAFnB,IAGR,KAAK,OAAO,gBAHZ;AAIH,CALD;;AAOA;;;AAGA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,kDAA5B,GAAiF,OAAO,aAAP,CAAqB,gBAArB,CAA7F;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,qCAA5B,GAAoE,OAAO,aAAP,CAAqB,GAArB,CAAhF;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,wDAA5B,GAAuF,OAAO,aAAP,CAAqB,mBAAmB,GAAxC,CAAnG;AACA,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,oCAA5B,IAAoE,mBAAmB,GAAvF,IAA8F,kBAA9F,GAAmH,gBAA/H;AACA,QAAQ,GAAR,CAAY,EAAZ;;AAEA;;;AAGA,SAAS,MAAT,CAAgB,IAAhB,EAAsB,KAAtB,EAA6B,MAA7B,EAAqC;AACjC,MACI,OAAO,aAAP,CAAqB,IAArB,KACA,OAAO,aAAP,CAAqB,KAArB,CADA,IAEA,OAAO,aAAP,CAAqB,MAArB,CAHJ,EAIE;AACE,WAAO,MAAP;AACH;AACD,QAAM,IAAI,UAAJ,CAAe,8BAAf,CAAN;AACH;AACD,QAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,2BAA5B,GAA0D,OAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAtE;AACA,OAAO,gBAAP,EAAyB,GAAzB,EAA8B,mBAAmB,GAAjD","file":"numberic-3-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/*************************************\n * 安全整数和 Number.isSafeInteger() *\n *************************************/\n\n/**\n * JavaScript 能够准确表示的整数范围在- 2^53 到 2^53 之间（不含两个端点），超过这个范围，无法精确表示这个值\n */\nconsole.log(\"[numeric]\\t\\t[test-\" + 1 + \"]\\t\\t[Math.pow(2, 53)] = \" + Math.pow(2, 53));\nconsole.log(\"[numeric]\\t\\t[test-\" + 1 + \"]\\t\\t[(Math.pow(2, 53) === Math.pow(2, 53) + 1)] = \" + (Math.pow(2, 53) === Math.pow(2, 53) + 1));\nconsole.log(\"\");\n\n/**\n * ES6 引入了 Number.MAX_SAFE_INTEGER 和 Number.MIN_SAFE_INTEGER 这两个常量，用来表示这个范围的上下限\n */\nconsole.log(\"[numeric]\\t\\t[test-\" + 2 + \"]\\t\\t[Number.MAX_SAFE_INTEGER] = \" + Number.MAX_SAFE_INTEGER);\nconsole.log(\"[numeric]\\t\\t[test-\" + 2 + \"]\\t\\t[Number.MIN_SAFE_INTEGER] = \" + Number.MIN_SAFE_INTEGER);\nconsole.log(\"[numeric]\\t\\t[test-\" + 2 + \"]\\t\\t[(Number.MAX_SAFE_INTEGER === -Number.MIN_SAFE_INTEGER)] = \" + (Number.MAX_SAFE_INTEGER === -Number.MIN_SAFE_INTEGER));\nconsole.log(\"[numeric]\\t\\t[test-\" + 2 + \"]\\t\\t[(Number.MAX_SAFE_INTEGER === Math.pow(2, 53) - 1)] = \" + (Number.MAX_SAFE_INTEGER === Math.pow(2, 53) - 1));\nconsole.log(\"\");\n\n/**\n * Number.isSafeInteger() 则是用来判断一个整数是否落在这个范围之内\n */\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.isSafeInteger('Save')] = \" + Number.isSafeInteger('Save'));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.isSafeInteger(null)] = \" + Number.isSafeInteger(null));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.isSafeInteger(NaN)] = \" + Number.isSafeInteger(NaN));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.isSafeInteger(Infinity)] = \" + Number.isSafeInteger(Infinity));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.isSafeInteger(-Infinity)] = \" + Number.isSafeInteger(-Infinity));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.isSafeInteger(6)] = \" + Number.isSafeInteger(6));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.isSafeInteger(2.67)] = \" + Number.isSafeInteger(2.67));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.isSafeInteger(9007199254740990)] = \" + Number.isSafeInteger(9007199254740990));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.isSafeInteger(9007199254740992)] = \" + Number.isSafeInteger(9007199254740992));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.isSafeInteger(Number.MIN_SAFE_INTEGER - 1)] = \" + Number.isSafeInteger(Number.MIN_SAFE_INTEGER - 1));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.isSafeInteger(Number.MIN_SAFE_INTEGER)] = \" + Number.isSafeInteger(Number.MIN_SAFE_INTEGER));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.isSafeInteger(Number.MAX_SAFE_INTEGER)] = \" + Number.isSafeInteger(Number.MAX_SAFE_INTEGER));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.isSafeInteger(Number.MAX_SAFE_INTEGER + 1)] = \" + Number.isSafeInteger(Number.MAX_SAFE_INTEGER + 1));\nconsole.log(\"\");\n\n/**\n * ES5 部署 Number.isSafeInteger()\n */\nNumber.isSafeInteger = function (n) {\n    return (typeof n === 'number' &&\n    Math.round(n) === n &&\n    Number.MIN_SAFE_INTEGER <= n &&\n    n <= Number.MAX_SAFE_INTEGER);\n}\n\n/**\n * 如果只验证运算结果是否为安全整数，很可能得到错误结果\n */\nconsole.log(\"[numeric]\\t\\t[test-\" + 4 + \"]\\t\\t[Number.isSafeInteger(9007199254740993)] = \" + Number.isSafeInteger(9007199254740993));\nconsole.log(\"[numeric]\\t\\t[test-\" + 4 + \"]\\t\\t[Number.isSafeInteger(990)] = \" + Number.isSafeInteger(990));\nconsole.log(\"[numeric]\\t\\t[test-\" + 4 + \"]\\t\\t[Number.isSafeInteger(9007199254740993 - 990)] = \" + Number.isSafeInteger(9007199254740993 - 990));\nconsole.log(\"[numeric]\\t\\t[test-\" + 4 + \"]\\t\\t[(9007199254740993 - 990)] = \" + (9007199254740993 - 990) + \", 是错误的 , 正确值为 = \" + 9007199254740003);\nconsole.log(\"\");\n\n/**\n * 下面的函数可以同时验证两个运算数和运算结果\n */\nfunction trusty(left, right, result) {\n    if (\n        Number.isSafeInteger(left) &&\n        Number.isSafeInteger(right) &&\n        Number.isSafeInteger(result)\n    ) {\n        return result;\n    }\n    throw new RangeError('Operation cannot be trusted!');\n}\nconsole.log(\"[numeric]\\t\\t[test-\" + 5 + \"]\\t\\t[trusty(3, 3, 6)] = \" + trusty(3, 3, 6));\ntrusty(9007199254740993, 990, 9007199254740993 - 990);\n"]}