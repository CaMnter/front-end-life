{"version":3,"sources":["numeric-2.js"],"names":[],"mappings":"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","file":"numeric-2-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/*****************************************\n * Number.parseInt() Number.parseFloat() *\n *****************************************/\n\n/**\n * ES6 将全局方法 parseInt() 和 parseFloat() ，移植到 Number 对象上面，行为完全保持不变\n */\n// ES5\nconsole.log(\"[numeric]\\t\\t[test-\" + 1 + \"]\\t\\t[parseInt(\\\"267\\\")] = \" + parseInt(\"267\"));\nconsole.log(\"[numeric]\\t\\t[test-\" + 1 + \"]\\t\\t[parseFloat(\\\"267.267\\\")] = \" + parseFloat(\"267.267\"));\n// ES6\nconsole.log(\"[numeric]\\t\\t[test-\" + 1 + \"]\\t\\t[Number.parseInt(\\\"267\\\")] = \" + Number.parseInt(\"267\"));\nconsole.log(\"[numeric]\\t\\t[test-\" + 1 + \"]\\t\\t[Number.parseInt(\\\"267.267\\\")] = \" + Number.parseFloat(\"267.267\"));\n// ===\nconsole.log(\"[numeric]\\t\\t[test-\" + 1 + \"]\\t\\t[Number.parseInt === parseInt] = \" + (Number.parseInt === parseInt));\nconsole.log(\"[numeric]\\t\\t[test-\" + 1 + \"]\\t\\t[Number.parseFloat === parseFloat] = \" + (Number.parseFloat === parseFloat));\n\nconsole.log(\"\");\n\n/**********************\n * Number.isInteger() *\n **********************/\n\n/**\n * Number.isInteger() 用来判断一个值是否为整数。需要注意的是，在 JavaScript 内部，整数和浮点数是同样的储\n * 存方法，所以 3 和 3.0 被视为同一个值\n */\nconsole.log(\"[numeric]\\t\\t[test-\" + 2 + \"]\\t\\t[Number.isInteger(267)] = \" + Number.isInteger(267));\nconsole.log(\"[numeric]\\t\\t[test-\" + 2 + \"]\\t\\t[Number.isInteger(267.0)] = \" + Number.isInteger(267.0));\nconsole.log(\"[numeric]\\t\\t[test-\" + 2 + \"]\\t\\t[Number.isInteger(267.1)] = \" + Number.isInteger(267.1));\nconsole.log(\"[numeric]\\t\\t[test-\" + 2 + \"]\\t\\t[Number.isInteger(\\\"267\\\")] = \" + Number.isInteger(\"267\"));\nconsole.log(\"[numeric]\\t\\t[test-\" + 2 + \"]\\t\\t[Number.isInteger(true)] = \" + Number.isInteger(true));\nconsole.log(\"\");\n\n/**\n * ES5 部署 Number.isInteger()\n */\n(function (global) {\n    var floor = Math.floor,\n        isFinite = global.isFinite;\n\n    Object.defineProperty(Number, 'isInteger', {\n        value: function isInteger(value) {\n            return typeof value === 'number' && isFinite(value) &&\n                value > -9007199254740992 && value < 9007199254740992 &&\n                floor(value) === value;\n        },\n        configurable: true,\n        enumerable: false,\n        writable: true\n    });\n})(this);\n\n/******************\n * Number.EPSILON *\n ******************/\n\n/**\n * ES6 在 Number 对象上面，新增一个极小的常量 Number.EPSILON\n */\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.EPSILON] = \" + Number.EPSILON);\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Number.EPSILON.toFixed(20)] = \" + Number.EPSILON.toFixed(20));\n\n/**\n * 引入一个这么小的量的目的，在于为浮点数计算，设置一个误差范围。我们知道浮点数计算是不精确的\n */\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[0.1 + 0.2] = \" + (0.1 + 0.2));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[0.1 + 0.2 - 0.3] = \" + (0.1 + 0.2 - 0.3));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[(0.1 + 0.2 - 0.3).toFixed(20)] = \" + (0.1 + 0.2 - 0.3).toFixed(20));\n\n/**\n * 但是如果这个误差能够小于 Number.EPSILON，我们就可以认为得到了正确结果\n * Number.EPSILON 的实质是一个可以接受的误差范围\n */\nfunction withinErrorMargin(left, right) {\n    return Math.abs(left - right) < Number.EPSILON;\n}\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[withinErrorMargin(0.1 + 0.2, 0.3)] = \" + withinErrorMargin(0.1 + 0.2, 0.3));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[withinErrorMargin(0.2 + 0.2, 0.3)] = \" + withinErrorMargin(0.2 + 0.2, 0.3));\n\n\n"]}