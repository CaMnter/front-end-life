{"version":3,"sources":["numeric-6.js"],"names":[],"mappings":"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","file":"numeric-6-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n\n/****************\n * Math.expm1() *\n ****************/\n\n/**\n * Math.expm1(x) 返回 ex - 1，即 Math.exp(x) - 1\n */\nconsole.log(\"[numeric]\\t\\t[test-\" + 1 + \"]\\t\\t[Math.expm1(-1)] = \" + Math.expm1(-1));\nconsole.log(\"[numeric]\\t\\t[test-\" + 1 + \"]\\t\\t[Math.expm1(0)] = \" + Math.expm1(0));\nconsole.log(\"[numeric]\\t\\t[test-\" + 1 + \"]\\t\\t[Math.expm1(1)] = \" + Math.expm1(1));\nconsole.log(\"\");\n\n/**\n * ES5 部署 Math.expm1\n */\nMath.expm1 = Math.expm1 || function (x) {\n        return Math.exp(x) - 1;\n    };\n\n/****************\n * Math.log1p() *\n ****************/\n\n/**\n * Math.log1p(x) 方法返回 1 + x 的自然对数，即 Math.log(1 + x)。如果 x 小于 -1，返回 NaN\n */\nconsole.log(\"[numeric]\\t\\t[test-\" + 2 + \"]\\t\\t[Math.log1p(1)] = \" + Math.log1p(1));\nconsole.log(\"[numeric]\\t\\t[test-\" + 2 + \"]\\t\\t[Math.log1p(0)] = \" + Math.log1p(0));\nconsole.log(\"[numeric]\\t\\t[test-\" + 2 + \"]\\t\\t[Math.log1p(-1)] = \" + Math.log1p(-1));\nconsole.log(\"[numeric]\\t\\t[test-\" + 2 + \"]\\t\\t[Math.log1p(-2)] = \" + Math.log1p(-2));\nconsole.log(\"\");\n\n/**\n * ES5 部署 Math.log1p\n */\nMath.log1p = Math.log1p || function (x) {\n        return Math.log(1 + x);\n    };\n\n/****************\n * Math.log10() *\n ****************/\n\n/**\n * Math.log10(x) 返回以 10 为底的 x 的对数。如果 x 小于 0，则返回 NaN\n */\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Math.log10(2)] = \" + Math.log10(2));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Math.log10(1)] = \" + Math.log10(1));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Math.log10(0)] = \" + Math.log10(0));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Math.log10(-2)] = \" + Math.log10(-2));\nconsole.log(\"[numeric]\\t\\t[test-\" + 3 + \"]\\t\\t[Math.log10(100000)] = \" + Math.log10(100000));\nconsole.log(\"\");\n\n/**\n * ES5 部署 Math.log10\n */\nMath.log10 = Math.log10 || function (x) {\n        return Math.log(x) / Math.LN10;\n    };\n\n/***************\n * Math.log2() *\n ***************/\n\n/**\n * Math.log2(x) 返回以 2 为底的 x 的对数。如果 x 小于 0，则返回 NaN\n */\nconsole.log(\"[numeric]\\t\\t[test-\" + 4 + \"]\\t\\t[Math.log2(3)] = \" + Math.log2(3));\nconsole.log(\"[numeric]\\t\\t[test-\" + 4 + \"]\\t\\t[Math.log2(2)] = \" + Math.log2(2));\nconsole.log(\"[numeric]\\t\\t[test-\" + 4 + \"]\\t\\t[Math.log2(1)] = \" + Math.log2(1));\nconsole.log(\"[numeric]\\t\\t[test-\" + 4 + \"]\\t\\t[Math.log2(0)] = \" + Math.log2(0));\nconsole.log(\"[numeric]\\t\\t[test-\" + 4 + \"]\\t\\t[Math.log2(-2)] = \" + Math.log2(-2));\nconsole.log(\"[numeric]\\t\\t[test-\" + 4 + \"]\\t\\t[Math.log2(267)] = \" + Math.log2(267));\nconsole.log(\"[numeric]\\t\\t[test-\" + 4 + \"]\\t\\t[Math.log2(1 << 27)] = \" + Math.log2(1 << 27));\nconsole.log(\"\");\n\n/**\n * ES5 部署 Math.log2\n */\nMath.log2 = Math.log2 || function (x) {\n        return Math.log(x) / Math.LN2;\n    };\n\n/****************\n * 三角函数方法 *\n ***************/\n\n/**\n * ES6 新增了 6 个三角函数方法\n *\n * Math.sinh(x) 返回x的双曲正弦\n * Math.cosh(x) 返回x的双曲余弦\n * Math.tanh(x) 返回x的双曲正切\n * Math.asinh(x) 返回x的反双曲正弦\n * Math.acosh(x) 返回x的反双曲余弦\n * Math.atanh(x) 返回x的反双曲正切\n */\n\n"]}