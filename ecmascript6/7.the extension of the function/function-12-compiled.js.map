{"version":3,"sources":["function-12.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;;AAIA;;;;;;;AAOA,SAAS,EAAT,CAAY,CAAZ,EAAe;AACX,WAAO,IAAI,CAAX;AACH;;AAED,SAAS,EAAT,CAAY,CAAZ,EAAe;AACX,WAAO,IAAI,CAAX;AACH;;AAED;AACA,SAAS,EAAT,CAAY,CAAZ,EAAe;AACX,WAAO,GAAG,CAAH,CAAP;AACH;;AAED;AACA,SAAS,EAAT,CAAY,CAAZ,EAAe;AACX,QAAI,QAAQ,GAAG,CAAH,CAAZ;AACA,WAAO,KAAP;AACH;;AAED;AACA,SAAS,EAAT,CAAY,CAAZ,EAAe;AACX,WAAO,GAAG,CAAH,IAAQ,CAAf;AACH;;AAED;AACA,SAAS,EAAT,CAAY,CAAZ,EAAe;AACX,OAAG,CAAH;AACH;;AAED;;;;;AAKA;AACA,SAAS,EAAT,CAAY,CAAZ,EAAe;AACX,OAAG,CAAH;AACA,WAAO,SAAP;AACH;;AAED;;;;;AAKA,SAAS,EAAT,CAAY,CAAZ,EAAe;AACX,QAAI,IAAI,CAAR,EAAW;AACP,eAAO,GAAG,CAAH,CAAP;AACH;AACD,WAAO,GAAG,CAAH,CAAP;AACH","file":"function-12-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/**********\n * 尾调用 *\n **********/\n\n/**\n * 尾调用（Tail Call）是函数式编程的一个重要概念，\n * 本身非常简单，一句话就能说清楚，就是指\n *\n * 某个函数的最后一步是调用另一个函数\n */\n\nfunction f0(z) {\n    return 1 / z;\n}\n\nfunction f1(z) {\n    return z * z;\n}\n\n// 属于 尾调用\nfunction f2(z) {\n    return f1(z);\n}\n\n// 不属于 尾调用\nfunction f3(z) {\n    let tempZ = f1(z);\n    return tempZ;\n}\n\n// 不属于 尾调用\nfunction f4(z) {\n    return f1(z) + z;\n}\n\n// 不属于 尾调用\nfunction f4(z) {\n    f1(z);\n}\n\n/**\n * f4 等同于 f5\n *\n * 所以不属于\n */\n// 不属于 尾调用\nfunction f5(z) {\n    f1(z);\n    return undefined;\n}\n\n/**\n * 尾调用不一定出现在函数尾部，只要是最后一步操作即可\n *\n * f0 和 f1 都属于尾调用, 因为都是最后一步操作\n */\nfunction f6(z) {\n    if (z > 0) {\n        return f1(z);\n    }\n    return f0(z);\n}\n\n"]}