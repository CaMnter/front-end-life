{"version":3,"sources":["function-2.js"],"names":[],"mappings":";;AAAA;;;;AAKA;;;;AAIA;;;;;;AAMA,SAAS,EAAT,GAAsB;AAAA,QAAV,CAAU,uEAAN,CAAM;AAAA,QAAH,CAAG;;AAClB,YAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,aAA7B,GAA6C,CAA7C,GAAiD,YAAjD,GAAgE,CAA5E;AACH;AACD;AACA,GAAG,CAAH;AACA;AACA,GAAG,IAAH,EAAS,EAAT;AACA,GAAG,GAAH,EAAQ,EAAR;AACA,GAAG,SAAH,EAAc,EAAd;AACA,QAAQ,GAAR,CAAY,EAAZ;;AAEA,SAAS,EAAT,CAAY,CAAZ,EAAyB;AAAA,QAAV,CAAU,uEAAN,CAAM;AAAA,QAAH,CAAG;;AACrB,YAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,aAA7B,GAA6C,CAA7C,GAAiD,YAAjD,GAAgE,CAAhE,GAAoE,YAApE,GAAmF,CAA/F;AACH;AACD;AACA,GAAG,CAAH;AACA,GAAG,CAAH,EAAM,CAAN;AACA;AACA,GAAG,CAAH,EAAM,SAAN,EAAiB,CAAjB;AACA,QAAQ,GAAR,CAAY,EAAZ;;AAGA;;;;AAIA;;;;;AAKA,QAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,oCAA7B,GAAqE,UAAU,CAAV,EAAa,CACzF,CAD2E,CACzE,MADP;AAEA,QAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,wCAA7B,GAAyE,YAAiB;AAAA,QAAP,CAAO,uEAAH,CAAG;AACjG,CAD+E,CAC7E,MADP;AAEA,QAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,8CAA7B,GAA+E,YAAuB;AAAA,QAAb,CAAa,uEAAT,CAAS;AAAA,QAAN,CAAM;AAAA,QAAH,CAAG;AAC7G,CADqF,CACnF,MADP;AAEA,QAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,8CAA7B,GAA+E,UAAU,CAAV,EAAa,CAAb,EAAuB;AAAA,QAAP,CAAO,uEAAH,CAAG;AAC7G,CADqF,CACnF,MADP;AAEA,QAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,8CAA7B,GAA+E,UAAU,CAAV,EAAuB;AAAA,QAAV,CAAU,uEAAN,CAAM;AAAA,QAAH,CAAG;AAC7G,CADqF,CACnF,MADP;AAEA,QAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,yCAA7B,GAA0E,YAAmB,CACpG,CADgF,CAC9E,MADP","file":"function-2-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n\n/*******************\n * 参数默认值的位置 *\n *******************/\n\n/**\n * 有默认值的参数都不是尾参数。这时，无法只省略该参数，而不省略它后面的参数，除非显式输入 undefined\n *\n * undefined 会触发默认值\n * null 不会\n */\nfunction f1(x = 7, y) {\n    console.log(\"[function]\\t\\t[test-\" + 1 + \"]\\t\\t[x] = \" + x + \"\\t\\t[y] = \" + y);\n}\nf1();\nf1(6);\n// f1(, 1); // 报错\nf1(null, 67);\nf1(NaN, 67);\nf1(undefined, 67);\nconsole.log(\"\");\n\nfunction f2(x, y = 7, z) {\n    console.log(\"[function]\\t\\t[test-\" + 2 + \"]\\t\\t[x] = \" + x + \"\\t\\t[y] = \" + y + \"\\t\\t[z] = \" + z);\n}\nf2();\nf2(6);\nf2(6, 7);\n// f2(6, , 8); // 报错\nf2(6, undefined, 7);\nconsole.log(\"\");\n\n\n/**********************\n * 函数的 length 属性 *\n **********************/\n\n/**\n * 函数的 length 属性，将返回没有指定默认值的参数个数。也就是说，指定了默认值后，length 属性将失真\n *\n * 设置了默认值的参数不是尾参数，那么 length 属性也不再计入后面的参数了\n */\nconsole.log(\"[function]\\t\\t[test-\" + 3 + \"]\\t\\t[(function (x) {}).length] = \" + (function (x) {\n    }).length);\nconsole.log(\"[function]\\t\\t[test-\" + 3 + \"]\\t\\t[(function (x = 6) {}).length] = \" + (function (x = 6) {\n    }).length);\nconsole.log(\"[function]\\t\\t[test-\" + 3 + \"]\\t\\t[(function (x = 6, y, z) {}).length] = \" + (function (x = 6, y, z) {\n    }).length);\nconsole.log(\"[function]\\t\\t[test-\" + 3 + \"]\\t\\t[(function (x, y, z = 7) {}).length] = \" + (function (x, y, z = 7) {\n    }).length);\nconsole.log(\"[function]\\t\\t[test-\" + 3 + \"]\\t\\t[(function (x, y = 6, z) {}).length] = \" + (function (x, y = 6, z) {\n    }).length);\nconsole.log(\"[function]\\t\\t[test-\" + 3 + \"]\\t\\t[(function(...args) {}).length] = \" + (function (...args) {\n    }).length);\n\n\n"]}