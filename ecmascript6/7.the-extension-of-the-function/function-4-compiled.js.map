{"version":3,"sources":["function-4.js"],"names":[],"mappings":"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","file":"function-4-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n\n/*************\n * rest 参数 *\n *************/\n\n/**\n * ...变量名\n *\n * ES6 引入 rest 参数（形式为 “...变量名” ），用于获取函数的多余参数，这样就不需要使用 arguments 对象了。\n * rest 参数搭配的变量是一个数组，该变量将多余的参数放入数组中。\n */\n\nfunction f1(...values) {\n    let sum = 0;\n    for (var value of values) {\n        sum += value;\n    }\n    return sum;\n}\nconsole.log(\"[function]\\t\\t[test-\" + 1 + \"]\\t\\t[f1(2, 6, 7)] = \" + f1(2, 6, 7));\nconsole.log(\"\");\n\n\n/**\n * rest 参数代替 arguments 变量\n * rest 参数的写法更自然也更简洁\n */\n// arguments 变量的写法\nfunction sortNumbers1() {\n    return Array.prototype.slice.call(arguments).sort();\n}\n// rest 参数的写法\nconst sortNumbers2 = (...numbers) => numbers.sort();\n\n/**\n * rest 参数中的变量代表一个数组，所以数组特有的方法都可以用于这个变量\n */\nfunction f2(array, ...items) {\n    items.forEach(function (item) {\n        array.push(item);\n    });\n}\n\nvar a1 = [];\nf2(a1, 2, 6, 7);\nconsole.log(\"[function]\\t\\t[test-\" + 2 + \"]\\t\\t[a1] = \" + a1);\n\n/**\n * rest 参数后, 不能有其他参数\n */\n// 报错\n// function f3(a, ...b, c) {\n// ...\n// }\n\n/**\n * 函数 length 属性不包含, rest 参数\n */\nconsole.log(\"[function]\\t\\t[test-\" + 3 + \"]\\t\\t[(function(v) {}).length] = \" + (function (v) {\n    }).length);\nconsole.log(\"[function]\\t\\t[test-\" + 3 + \"]\\t\\t[(function(...v) {}).length] = \" + (function (...v) {\n    }).length);\nconsole.log(\"[function]\\t\\t[test-\" + 3 + \"]\\t\\t[(function(u, v) {}).length] = \" + (function (u, ...v) {\n    }).length)\nconsole.log(\"\");\n\n\n/**************\n * 扩展运算符 *\n **************/\n\n/**\n * ...数组\n * \n * 扩展运算符（ spread ）是三个点（...）。它好比 rest 参数 的逆运算，将一个数组转为用逗号分隔的参数序列\n */\nconsole.log(\"[function]\\t\\t[test-\" + 5 + \"]\\t\\t[...[2, 3, 3]] = \", ...[2, 3, 3]);\nconsole.log(\"[function]\\t\\t[test-\" + 5 + \"]\\t\\t[2, ...[3, 3, 3], 67] = \" + 2, ...[3, 3, 3], 67);\nconsole.log(\"\");\n\nfunction push(array, ...items) {\n    array.push(...items);\n}\n\nfunction add(x, y) {\n    return x + y;\n}\n\nconsole.log(\"[function]\\t\\t[test-\" + 6 + \"]\\t\\t[add(...[2, 67])] = \", add(...[2, 67]));\nconsole.log(\"\");\n\n/**\n * 扩展运算符与正常的函数参数可以结合使用\n */\nfunction f(v, w, x, y, z) {\n    return v + w + x + y + z;\n}\nvar args = [2, 3, 3];\nf(-1, ...args, 2, ...[6, 7]);\nconsole.log(\"[function]\\t\\t[test-\" + 7 + \"]\\t\\t[f(-1, ...args, 2, ...[6, 7])] = \", f(-1, ...args, 2, ...[6, 7]));\n\n"]}