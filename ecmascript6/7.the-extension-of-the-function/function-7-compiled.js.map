{"version":3,"sources":["function-7.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;;AAIA;;;;AAIA,SAAS,EAAT,GAAc;AACV;AACA;AACH;;AAED;;;;;AAKA;;;;;AAKA;AACA;AACA;;AAEA;;;;;AAKA;AACA;AACA;;AAEA;;;;;AAKA;AACA;AACA;;AAEA;;;;AAIA;;;AAGA;AACA,SAAS,EAAT,CAAY,CAAZ,EAAwB;AAAA,MAAT,CAAS,uEAAL,GAAK;AAEvB;AADG;;;AAGJ;;;AAGA,IAAM,KAAM,YAAY;AACpB;;AACA,WAAS,EAAT,CAAY,CAAZ,EAAwB;AACpB;;AADoB,QAAT,CAAS,uEAAL,GAAK;AAEvB;AACJ,CALW,EAAZ","file":"function-7-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/************\n * 严格模式 *\n ************/\n\n/**\n * 从 ES5 开始，函数内部可以设定为严格模式\n */\n\nfunction f1() {\n    'use strict'\n    // doing something\n}\n\n/**\n * 《 ECMAScript 2016 标准 》做了一点修改，规定只要函数参数使用了默认值、解构赋值、或者扩展运算符，那么函\n * 数内部就不能显式设定为严格模式，否则会报错\n */\n\n/**\n * 默认值\n *\n * Illegal 'use strict' directive in function with non-simple parameter list\n */\n// function f2(x, y = 67) {\n//     'use strict'\n// }\n\n/**\n * 解构赋值\n *\n * Illegal 'use strict' directive in function with non-simple parameter list\n */\n// function f3({x, y}) {\n//     'use strict'\n// }\n\n/**\n * 扩展运算符\n *\n * Illegal 'use strict' directive in function with non-simple parameter list\n */\n// function f4(...z) {\n//     'use strict'\n// }\n\n/************\n * 解决方法 *\n ************/\n\n/**\n * 1. 全局性的严格模式\n */\n'use strict';\nfunction f5(x, y = 267) {\n    // code\n}\n\n/**\n * 2. 把函数包在一个无参数的立即执行函数里面\n */\nconst c1 = (function () {\n    'use strict';\n    function f6(x, y = 267) {\n        // code\n    }\n}());"]}