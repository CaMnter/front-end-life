{"version":3,"sources":["symbol-6-4.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;;AAIA,CAAC,YAAK;AACF,MAAI,UAAU,QAAQ,iBAAR,CAAd;AACA,YAAU,GAAV;AACA,UAAQ,GAAR,CAAY,uBAAuB,CAAvB,GAA2B,mBAAvC,EAA4D,OAAO,OAAO,GAAP,CAAW,SAAX,CAAP,CAA5D;AACA;;;;;;;;AAQH,CAZD","file":"symbol-6-4-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/*****************************\n * 模块的 Singleton 模式 解决 *\n *****************************/\n\n(()=> {\n    var camnter = require('./symbol-6-3.js');\n    camnter = 233;\n    console.log(\"[symbol]\\t\\t[test-\" + 1 + \"]\\t\\t[camnter] = \", global[Symbol.for('camnter')]);\n    /**\n     * 不会被无意间覆盖\n     *\n     * 如果用 Symbol() 将会无法访问得到, 也无法修改\n     *\n     * 但这样也有一个问题 就是如果多次执行这个脚本\n     * 得到的值都是不一样的\n     */\n})();\n"]}