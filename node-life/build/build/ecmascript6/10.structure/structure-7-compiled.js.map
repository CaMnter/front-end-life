{"version":3,"sources":["structure-7.js"],"names":[],"mappings":"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","file":"structure-7-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/***********************************\n * ES6 Map 与其他数据结构的互相转换 *\n ***********************************/\n\n/**\n * Map >> Array\n * 最方便的：扩展运算符 ...\n */\n(() => {\n    console.log(\"[structure]  [test-\" + 1 + \"]  [...new Map([['name', 'CaMnter'], ['save', 'Save you from anything']])] = \", [...new Map([['name', 'CaMnter'], ['save', 'Save you from anything']])], '\\n');\n})();\n\n/**\n * Array >> Map\n * 直接作为 Map 的参数即可\n */\n(() => {\n    console.log(\"[structure]  [test-\" + 2 + \"]  [new Map([[1, 'A'], [2, 'B']])] = \", new Map([[1, 'A'], [2, 'B']]), '\\n');\n})();\n\n/**\n * Map >> Object\n *\n * 如果 key 是 string，那么正常转换\n * 如果 key 非 string，那么会将 key 转为 string\n */\nfunction mapToObject(map) {\n    let object = Object.create(null);\n    for (let [key, value] of map) {\n        object[key] = value;\n    }\n    return object;\n}\n(() => {\n    let intKeyMap = new Map([[1, 'A'], [2, 'B']]);\n    let stringKeyMap = new Map([['name', 'CaMnter'], ['save', 'Save you from anything']]);\n\n    // 会将 key 转为 string\n    console.log(\"[structure]  [test-\" + 3 + \"]  [mapToObject(intKeyMap)] = \", mapToObject(intKeyMap));\n    console.log(\"[structure]  [test-\" + 3 + \"]  [mapToObject(stringKeyMap)] = \", mapToObject(stringKeyMap), '\\n');\n})();\n\n/**\n * Object >> Map\n */\nfunction objectToMap(object) {\n    let map = new Map();\n    for (let key of Object.keys(object)) {\n        map.set(key, object[key]);\n    }\n    return map;\n}\n(() => {\n    let object = {'name': 'CaMnter', 'save': 'Save you from anything'};\n    console.log(\"[structure]  [test-\" + 4 + \"]  [objectToMap(object)] = \", objectToMap(object), '\\n');\n})();\n\n/**\n * Map >> JSON\n *\n * 混合 key      ：[...Map] >> JSON.stringify()\n * 纯 string key ：Map >> Object >> JSON.stringify()\n */\n(() => {\n    // 混合 key\n    let mixKeyMap = new Map([[1, 'A'], [true, 'B'], ['C', 'C'], [NaN, 'D']]);\n    // 纯 string key\n    let stringKeyMap = new Map([['name', 'CaMnter'], ['save', 'Save you from anything']]);\n    console.log(\"[structure]  [test-\" + 5 + \"]  [objectToMap(object)] = \", JSON.stringify([...mixKeyMap]));\n    console.log(\"[structure]  [test-\" + 5 + \"]  [objectToMap(object)] = \", JSON.stringify(mapToObject(stringKeyMap)), '\\n');\n})();\n\n/**\n * JSON >> Map\n */\n// 正常情况\nfunction jsonToStringMap(jsonString) {\n    return objectToMap(JSON.parse(jsonString));\n}\n// 不正常情况，如 [[1, 'A'], [true, 'B'], ['C', 'C'], [NaN, 'D']]\nfunction jsonToMap(jsonString) {\n    return new Map(JSON.parse(jsonString));\n}\n\n(() => {\n    console.log(\"[structure]  [test-\" + 6 + \"]  [objectToMap(object)] = \", jsonToStringMap('{\"name\": \"CaMnter\", \"save\": \"Save you from anything\"}'));\n    console.log(\"[structure]  [test-\" + 6 + \"]  [jsonToMap('[[1, \\\"A\\\"], [true, \\\"B\\\"], [\\\"C\\\", \\\"C\\\"]]')] = \", jsonToMap('[[1, \"A\"], [true, \"B\"], [\"C\", \"C\"]]'));\n})();\n"]}