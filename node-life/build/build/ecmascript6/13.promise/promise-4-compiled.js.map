{"version":3,"sources":["promise-4.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;;AAIA;;;;;AAKA;;;;;;AAMA;;;;;;;;AASA,CAAC,YAAM;;AAEH,aAAS,cAAT,CAAwB,EAAxB,EAA4B;AACxB,YAAM,WAAW,gCAAjB;AACA,eAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,gBAAI,OAAO,EAAP,KAAc,QAAd,IAA0B,OAAO,EAAP,IAAa,CAA3C,EAA8C;AAC1C,wBAAQ,WAAW,EAAnB;AACH,aAFD,MAEO;AACH,uBAAO,IAAI,KAAJ,CAAU,iBAAV,CAAP;AACH;AACJ,SANM,CAAP;AAOH;;AAED,aAAS,oBAAT,CAA8B,OAA9B,EAAuC;AACnC,eAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,gBAAI,SAAS,OAAT,IAAoB,OAAO,OAA/B,EAAwC;AACpC;AACA,wBAAQ,GAAR;AACH,aAHD,MAGO;AACH,uBAAO,IAAI,KAAJ,CAAU,sBAAV,CAAP;AACH;AACJ,SAPM,CAAP;AAQH;;AAED,QAAI,SAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,CAAb;;AAEA,YAAQ,GAAR,CAAY,OAAO,GAAP,CAAW,mBAAW;AAC9B,eAAO,eAAe,OAAf,CAAP;AACH,KAFW,CAAZ,EAEI,IAFJ,CAES,wBAAgB;AACrB,gBAAQ,GAAR,CAAY,sBAAsB,CAAtB,GAA0B,uCAAtC,EAA+E,YAA/E,EAA6F,IAA7F;AACA,eAAO,QAAQ,GAAR,CAAY,aAAa,GAAb,CAAiB,mBAAW;AAC3C,mBAAO,qBAAqB,OAArB,CAAP;AACH,SAFkB,CAAZ,CAAP;AAGH,KAPD,EAOG,IAPH,CAOQ,6BAAqB;AACzB,gBAAQ,GAAR,CAAY,sBAAsB,CAAtB,GAA0B,uCAAtC,EAA+E,iBAA/E,EAAkG,IAAlG;AACH,KATD,EASG,KATH,CASS,iBAAS;AACd,gBAAQ,GAAR,CAAY,sBAAsB,CAAtB,GAA0B,iCAAtC,EAAyE,KAAzE,EAAgF,IAAhF;AACH,KAXD;;AAcA;AACA,QAAI,SAAS,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,EAA7B,CAAb;;AAGA,YAAQ,GAAR,CAAY,OAAO,GAAP,CAAW,mBAAW;AAC9B,eAAO,eAAe,OAAf,CAAP;AACH,KAFW,CAAZ,EAEI,IAFJ,CAES,wBAAgB;AACrB,gBAAQ,GAAR,CAAY,sBAAsB,CAAtB,GAA0B,uCAAtC,EAA+E,YAA/E,EAA6F,IAA7F;AACA,eAAO,QAAQ,GAAR,CAAY,aAAa,GAAb,CAAiB,mBAAW;AAC3C,mBAAO,qBAAqB,OAArB,CAAP;AACH,SAFkB,CAAZ,CAAP;AAGH,KAPD,EAOG,IAPH,CAOQ,6BAAqB;AACzB,gBAAQ,GAAR,CAAY,sBAAsB,CAAtB,GAA0B,uCAAtC,EAA+E,iBAA/E,EAAkG,IAAlG;AACH,KATD,EASG,KATH,CASS,iBAAS;AACd,gBAAQ,GAAR,CAAY,sBAAsB,CAAtB,GAA0B,iCAAtC,EAAyE,KAAzE,EAAgF,IAAhF;AACH,KAXD;AAaH,CAzDD","file":"promise-4-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/*****************\n * Promise.all() *\n *****************/\n\n/**\n * Promise.all 方法用于将多个 Promise 实例\n * 包装成一个新的 Promise 实例\n */\n\n/**\n * Promise.all 方法接收一个 数组 作为参数\n * 数组的元素都是 Promise 对象\n * 不是的话，需要先转为 Promise 对象\n */\n\n/**\n * 只要数组内 Promise 的状态全部都为 resolve\n * Promise.all 得到的 Promise 才会是 resolve\n *\n * 只要数组内的 Promise 的其中一个状态为 reject\n * Promise.all 得到的 Promise 就会是 reject\n */\n\n\n(() => {\n\n    function getRequestById(id) {\n        const BASE_URL = 'https://www.camnter.com/topic/'\n        return new Promise((resolve, reject) => {\n            if (typeof id === 'number' && Number(id) > 0) {\n                resolve(BASE_URL + id);\n            } else {\n                reject(new Error('Id is not legal'));\n            }\n        });\n    };\n\n    function getResponseByRequest(request) {\n        return new Promise((resolve, reject) => {\n            if (null !== request && '' !== request) {\n                // 假如成功了\n                resolve(400);\n            } else {\n                reject(new Error('Request is not legal'));\n            }\n        });\n    };\n\n    let arrayA = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    Promise.all(arrayA.map(element => {\n        return getRequestById(element);\n    })).then(requestArray => {\n        console.log(\"[promise]  [test-\" + 1 + \"]  [promise # then # requestArray] = \", requestArray, '\\n');\n        return Promise.all(requestArray.map(request => {\n            return getResponseByRequest(request);\n        }));\n    }).then(responseCodeArray => {\n        console.log(\"[promise]  [test-\" + 1 + \"]  [promise # then # requestArray] = \", responseCodeArray, '\\n');\n    }).catch(error => {\n        console.log(\"[promise]  [test-\" + 1 + \"]  [promise # catch # error] = \", error, '\\n');\n    });\n\n\n    // 假如有一个 id 不合法\n    let arrayB = [-1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n\n    Promise.all(arrayB.map(element => {\n        return getRequestById(element);\n    })).then(requestArray => {\n        console.log(\"[promise]  [test-\" + 2 + \"]  [promise # then # requestArray] = \", requestArray, '\\n');\n        return Promise.all(requestArray.map(request => {\n            return getResponseByRequest(request);\n        }));\n    }).then(responseCodeArray => {\n        console.log(\"[promise]  [test-\" + 2 + \"]  [promise # then # requestArray] = \", responseCodeArray, '\\n');\n    }).catch(error => {\n        console.log(\"[promise]  [test-\" + 2 + \"]  [promise # catch # error] = \", error, '\\n');\n    })\n\n})();\n\n"]}