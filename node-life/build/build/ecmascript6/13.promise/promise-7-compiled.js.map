{"version":3,"sources":["promise-7.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;;AAIA;;;;AAIA,CAAC,YAAM;AACH,QAAM,YAAY,WAAlB;AACA,YACK,MADL,CACY,SADZ,EAEK,KAFL,CAEW,iBAAS;AACZ,gBAAQ,GAAR,CAAY,sBAAsB,CAAtB,GAA0B,iCAAtC,EAAyE,KAAzE;AACH,KAJL;;AAMA;;AAEA,QAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AAC7B,eAAO,SAAP;AACH,KAFD,EAEG,KAFH,CAES,iBAAS;AACd,gBAAQ,GAAR,CAAY,sBAAsB,CAAtB,GAA0B,iCAAtC,EAAyE,KAAzE,EAAgF,IAAhF;AACH,KAJD;AAKH,CAfD;;AAkBA;;;;AAIA,CAAC,YAAM;AACH,QAAM,YAAY,WAAlB;AACA,QAAM,WAAW;AACb,YADa,gBACR,OADQ,EACC,MADD,EACS;AAClB,mBAAO,SAAP;AACH;AAHY,KAAjB;;AAMA,YACK,MADL,CACY,QADZ,EAEK,KAFL,CAEW,iBAAS;AACZ,gBAAQ,GAAR,CAAY,sBAAsB,CAAtB,GAA0B,8CAAtC,EAAsF,UAAU,QAAhG,EAA0G,IAA1G;AACH,KAJL;AAKH,CAbD","file":"promise-7-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/*********************\n * Promise.reject() *\n *********************/\n\n/**\n * Promise.reject 可以 将现有的对象，转换为 rejected 状态的 Promise 对象\n */\n\n(() => {\n    const ERROR_MSG = '异空间错误 404';\n    Promise\n        .reject(ERROR_MSG)\n        .catch(error => {\n            console.log(\"[promise]  [test-\" + 1 + \"]  [promise # catch # error] = \", error);\n        });\n\n    // 等价于\n\n    new Promise((resolve, reject) => {\n        reject(ERROR_MSG);\n    }).catch(error => {\n        console.log(\"[promise]  [test-\" + 1 + \"]  [promise # catch # error] = \", error, '\\n');\n    });\n})();\n\n\n/**\n * Promise.reject 的参数是一个 thenable 对象\n * 那么在 catch 方法中捕获的就是 thenable 对象，不是 reject 传下来的数据\n */\n(() => {\n    const ERROR_MSG = '异空间错误 404';\n    const thenable = {\n        then(resolve, reject) {\n            reject(ERROR_MSG);\n        }\n    };\n\n    Promise\n        .reject(thenable)\n        .catch(error => {\n            console.log(\"[promise]  [test-\" + 2 + \"]  [promise # catch # error === thenable] = \", error === thenable, '\\n');\n        });\n})();"]}