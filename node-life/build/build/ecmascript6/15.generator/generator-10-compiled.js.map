{"version":3,"sources":["generator-10.js"],"names":[],"mappings":"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","file":"generator-10-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\nrequire(\"babel-polyfill\");\n\n/*******************************************\n * Generator 应用场景 - 异步操作的同步化表达 *\n *******************************************/\n\n/**\n * 场景一：异步操作的同步化表达\n *\n * 异步操作的后续操作可以放在 yield 下面\n */\n(() => {\n    function* loadUI() {\n        showLoadingScreen();\n        yield loadUIDataAsynchronously();\n        hideLoadingScreen();\n    };\n    function showLoadingScreen() {\n        console.log(\"[generator]  [test-\" + 1 + \"]  [showLoadingScreen]\");\n    };\n    function loadUIDataAsynchronously() {\n        console.log(\"[generator]  [test-\" + 1 + \"]  [loadUIDataAsynchronously]\");\n    };\n    function hideLoadingScreen() {\n        console.log(\"[generator]  [test-\" + 1 + \"]  [hideLoadingScreen]\", '\\n');\n    };\n\n    // 第一个 yield 停止\n    let loader = loadUI();\n    // 执行 loadUIDataAsynchronously 方法后，停留在 yield loadUIDataAsynchronously()\n    loader.next();\n    // 走过 yield loadUIDataAsynchronously()，到下个 yield 停止\n    loader.next();\n})();\n\n/**\n * 场景二：Ajax 后同步\n */\n(() => {\n    function* main() {\n        var result = yield request(\"https://www.camnter.com\");\n        // 等待 Ajax 请求成功后，才 next。才走以下流程\n        var response = JSON.parse(result);\n        console.log(\"[generator]  [test-\" + 2 + \"]  [response] = \", response);\n    }\n\n    function request(url) {\n        // makeAjaxCall(url, function (response) {\n        //     it.next(response);\n        // });\n    }\n\n    var it = main();\n    it.next();\n})();\n\n/**\n * 场景三：读取文件，每一行都得 next 才读\n */\n(() => {\n    function* readFile(filePath) {\n        let file = new FileReader(filePath);\n        try {\n            while (!file.eof) {\n                yield parseInt(file.readLine(), 10);\n            }\n        } catch (e) {\n            console.log(\"[generator]  [test-\" + 3 + \"]  [e] = \", e);\n        } finally {\n            file.close();\n        }\n    };\n})();\n\n\n/**********************************\n * Generator 应用场景 - 控制流管理 *\n **********************************/\n\n\n/**\n * 普通写法\n */\n(() => {\n\n    function step1(func) {\n        return func();\n    };\n\n    function step2(x, func) {\n        return x + func();\n    };\n\n    function step3(x, func) {\n        return x + func();\n    };\n\n    function step4(x, func) {\n        return x + func();\n    };\n\n    let value1 = 1;\n    step1(function (value1) {\n        console.log(\"[generator]  [test-\" + 4 + \"]  [step1]   [value1] = \", value1)\n        step2(value1, function (value2) {\n            console.log(\"[generator]  [test-\" + 4 + \"]  [step2]   [value1] = \", value1, \"   [value2] = \", value2);\n            step3(value2, function (value3) {\n                console.log(\"[generator]  [test-\" + 4 + \"]  [step3]   [value2] = \", value2, \"   [value4] = \", value3);\n                step4(value3, function (value4) {\n                    // Do something with value4\n                    console.log(\"[generator]  [test-\" + 4 + \"]  [step4]   [value3] = \", value3, \"   [value4] = \", value4, '\\n');\n                    return value4 + 1;\n                });\n            });\n        });\n    });\n})();\n\n/**\n * Generator\n */\n(() => {\n\n    function step1(x) {\n        return x + 1;\n    };\n\n    function step2(x) {\n        return x + 2;\n    };\n\n    function step3(x) {\n        return x + 3;\n    };\n\n    function step4(x) {\n        return x + 4;\n    };\n\n    function* taskGenerator(value1) {\n        try {\n            var value2 = yield step1(value1);\n            console.log(\"[generator]  [test-\" + 6 + \"]  [value2] = \", value2);\n            var value3 = yield step2(value2);\n            console.log(\"[generator]  [test-\" + 6 + \"]  [value3] = \", value3);\n            var value4 = yield step3(value3);\n            console.log(\"[generator]  [test-\" + 6 + \"]  [value4] = \", value4);\n            var value5 = yield step4(value4);\n            console.log(\"[generator]  [test-\" + 6 + \"]  [value5] = \", value5);\n        } catch (e) {\n            console.log(\"[generator]  [test-\" + 6 + \"]  [e] = \", e);\n        }\n    };\n    function scheduler(taskGenerator) {\n        console.log(\"[generator]  [test-\" + 6 + \"]  [taskGenerator] = \", taskGenerator, \"   [taskGenerator.value] = \", taskGenerator.value);\n        let taskObject = taskGenerator.next(taskGenerator.value);\n        if (!taskObject.done) {\n            taskGenerator.value = taskObject.value;\n            scheduler(taskGenerator);\n        }\n    };\n    let task = taskGenerator(1);\n    scheduler(task);\n})();\n\n"]}