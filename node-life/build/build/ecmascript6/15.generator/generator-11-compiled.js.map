{"version":3,"sources":["generator-11.js"],"names":[],"mappings":"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","file":"generator-11-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\nrequire(\"babel-polyfill\");\n\n/******************************************\n * Generator 应用场景 - 部署 Iterator 接口 *\n ******************************************/\n\n/**\n * 第一种\n */\n(() => {\n    let target = {save: 'save', you: 'you', from: 'from', anything: 'anything'};\n\n    function* entriesIterator(target) {\n        let keys = Object.keys(target);\n        for (let key of keys) {\n            yield [key, target[key]];\n        }\n    };\n\n    for (let [key, value] of entriesIterator(target)) {\n        console.log(\"[generator]  [test-\" + 1 + \"]  [key] = \", key, \"   [value] = \", value);\n    }\n    console.log('');\n})();\n\n(() => {\n    let target = {save: 'save', you: 'you', from: 'from', anything: 'anything'};\n    target[Symbol.iterator] = function* (){\n        let keys = Object.keys(target);\n        for (let key of keys) {\n            yield [key, target[key]];\n        }\n    };\n    for (let [key, value] of target) {\n        console.log(\"[generator]  [test-\" + 2 + \"]  [key] = \", key, \"   [value] = \", value);\n    }\n    console.log('');\n})();\n\n/************************************\n * Generator 应用场景 - 作为数据结构 *\n ************************************/\n\n(() => {\n    function* doStuff() {\n        yield readFile.bind(null, 'save.txt');\n        yield readFile.bind(null, 'you.txt');\n    };\n    function readFile(filePath) {\n        let file = new FileReader(filePath);\n        try {\n            while (!file.eof) {\n                parseInt(file.readLine(), 10);\n            }\n        } catch (e) {\n            console.log(\"[generator]  [test-\" + 3 + \"]  [e] = \", e);\n        } finally {\n            file.close();\n        }\n    };\n    for (task of doStuff()) {\n        // task是一个函数，可以像回调函数那样使用它\n    }\n})();"]}