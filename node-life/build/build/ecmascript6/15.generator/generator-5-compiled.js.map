{"version":3,"sources":["generator-5.js"],"names":[],"mappings":"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","file":"generator-5-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/*****************************\n * Generator.prototype.throw *\n *****************************/\n\nrequire(\"babel-polyfill\");\n\n/**\n * Generator 函数返回的遍历器对象，都有一个 throw 方法\n * 可以在函数体外抛出错误，然后在 Generator 函数体内捕获\n */\n(() => {\n    let generatorFunction = function*() {\n        try {\n            yield;\n        } catch (e) {\n            console.log(\"[generator]  [test-\" + 1 + \"]  [内部捕获] = \", e);\n        }\n    };\n    let generator = generatorFunction();\n    generator.next();\n\n    try {\n        generator.throw('save');\n        generator.throw('you');\n    } catch (e) {\n        console.log(\"[generator]  [test-\" + 1 + \"]  [外部捕获] = \", e, '\\n');\n    }\n})();\n\n/**\n * Generator.throw 可以接受参数\n * 还会被 Generator catch 语句接收\n * 建议抛 Error 对象\n */\n(() => {\n    let generatorFunction = function*() {\n        try {\n            yield;\n        } catch (e) {\n            console.log(\"[generator]  [test-\" + 2 + \"]  [内部捕获] = \", e, '\\n');\n        }\n    };\n    let generator = generatorFunction();\n    generator.next();\n    generator.throw(new Error('异空间错误：2233'));\n})();\n\n/**\n * throw 方法被捕获后，会附带执行下一条 yield 语句\n */\n(() => {\n    let generatorFunction = function*() {\n        try {\n            yield 22;\n        } catch (e) {\n            // Nothing to do\n        }\n        yield 33;\n    }\n    let generator = generatorFunction();\n    console.log(\"[generator]  [test-\" + 3 + \"]  [generator.next()] = \", generator.next());\n    // 已经执行到第二个 yield\n    console.log(\"[generator]  [test-\" + 3 + \"]  [generator.throw()] = \", generator.throw());\n    console.log(\"[generator]  [test-\" + 3 + \"]  [generator.next()] = \", generator.next(), '\\n');\n})();\n\n/**\n * 如果 Generator 内部出现异常没捕获的话，就不会执行下去了\n * 下次 next 的 value = undefined，done = true\n */\n(() => {\n    function* generatorFunction() {\n        // 停\n        yield 'save';\n        // 这里不会停\n        console.log(\"[generator]  [test-\" + 4 + \"]  [generator console]\");\n        // 停\n        throw new Error('');\n        yield 22;\n        yield 33;\n    };\n    function log(generator) {\n        var v;\n        try {\n            v = generator.next();\n            console.log(\"[generator]  [test-\" + 4 + \"]  [第一次 next]\", v);\n        } catch (e) {\n            console.log(\"[generator]  [test-\" + 4 + \"]  [第一次 next - 捕捉错误]\", e);\n        }\n        try {\n            v = generator.next();\n            console.log(\"[generator]  [test-\" + 4 + \"]  [第二次 next]\", v);\n        } catch (e) {\n            console.log(\"[generator]  [test-\" + 4 + \"]  [第二次 next - 捕捉错误]\", e);\n        }\n        // 后续都不执行了\n        console.log(\"[generator]  [test-\" + 4 + \"]  [第三次 next]\", generator.next());\n        console.log(\"[generator]  [test-\" + 4 + \"]  [第四次 next]\", generator.next());\n        console.log(\"[generator]  [test-\" + 4 + \"]  [第四次 next]\", generator.next());\n    }\n\n    log(generatorFunction());\n})();"]}