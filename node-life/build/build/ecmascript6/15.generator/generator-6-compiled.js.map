{"version":3,"sources":["generator-6.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;;AAIA,QAAQ,gBAAR;;AAEA;;;;AAIA,CAAC,YAAM;AAAA,mBACO,iBADP;;AACH,aAAU,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACU,IADV;;AAAA;AAAA;AAAA,+BAEU,IAFV;;AAAA;AAAA;AAAA,+BAGU,MAHV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIC;AACD,QAAI,YAAY,mBAAhB;;AAEA;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0BAAxC,EAAoE,UAAU,IAAV,EAApE;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0BAAxC,EAAoE,UAAU,IAAV,EAApE;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,oCAAxC,EAA8E,UAAU,MAAV,CAAiB,QAAjB,CAA9E;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0BAAxC,EAAoE,UAAU,IAAV,EAApE;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0BAAxC,EAAoE,UAAU,IAAV,EAApE,EAAsF,IAAtF;;AAEA;AACA,gBAAY,mBAAZ;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0BAAxC,EAAoE,UAAU,IAAV,EAApE;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0BAAxC,EAAoE,UAAU,IAAV,EAApE;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,4BAAxC,EAAsE,UAAU,MAAV,EAAtE;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0BAAxC,EAAoE,UAAU,IAAV,EAApE;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0BAAxC,EAAoE,UAAU,IAAV,EAApE,EAAsF,IAAtF;AACH,CAtBD;;AAwBA;;;;AAIA,CAAC,YAAM;AAAA,oBACO,iBADP;;AACH,aAAU,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACU,CADV;;AAAA;AAAA;AAAA;AAAA,+BAGc,CAHd;;AAAA;AAAA;AAAA,+BAIc,CAJd;;AAAA;AAAA;AAAA,+BAKc,CALd;;AAAA;AAAA;AAAA;AAAA,+BAOc,CAPd;;AAAA;AAAA;AAAA,+BAQc,CARd;;AAAA;AAAA;AAAA,+BASc,CATd;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAWU,CAXV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYC;AACD,QAAI,YAAY,mBAAhB;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0BAAxC,EAAoE,UAAU,IAAV,EAApE;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0BAAxC,EAAoE,UAAU,IAAV,EAApE;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,gCAAxC,EAA0E,UAAU,MAAV,CAAiB,IAAjB,CAA1E;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0BAAxC,EAAoE,UAAU,IAAV,EAApE;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0BAAxC,EAAoE,UAAU,IAAV,EAApE;AACA;AACA,YAAQ,GAAR,CAAY,wBAAwB,CAAxB,GAA4B,0BAAxC,EAAoE,UAAU,IAAV,EAApE;AACH,CAtBD","file":"generator-6-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/******************************\n * Generator.prototype.return *\n ******************************/\n\nrequire(\"babel-polyfill\");\n\n/**\n * Generator 方法返回的 Iterator 对象，还有一个 return 方法\n * 可以返回给定的值\n */\n(() => {\n    function* generatorFunction() {\n        yield '22';\n        yield '33';\n        yield '2233';\n    };\n    var generator = generatorFunction();\n\n    // 提供参数 return\n    console.log(\"[generator]  [test-\" + 1 + \"]  [generator.next()] = \", generator.next());\n    console.log(\"[generator]  [test-\" + 1 + \"]  [generator.next()] = \", generator.next());\n    console.log(\"[generator]  [test-\" + 1 + \"]  [generator.return('return')] = \", generator.return('return'));\n    console.log(\"[generator]  [test-\" + 1 + \"]  [generator.next()] = \", generator.next());\n    console.log(\"[generator]  [test-\" + 1 + \"]  [generator.next()] = \", generator.next(), '\\n');\n\n    // 不提供参数\n    generator = generatorFunction();\n    console.log(\"[generator]  [test-\" + 2 + \"]  [generator.next()] = \", generator.next());\n    console.log(\"[generator]  [test-\" + 2 + \"]  [generator.next()] = \", generator.next());\n    console.log(\"[generator]  [test-\" + 2 + \"]  [generator.return()] = \", generator.return());\n    console.log(\"[generator]  [test-\" + 2 + \"]  [generator.next()] = \", generator.next());\n    console.log(\"[generator]  [test-\" + 2 + \"]  [generator.next()] = \", generator.next(), '\\n');\n})();\n\n/**\n * 有 finally 代码块的话，return 会推迟到 finally\n * 代码块执行完之后才执行\n */\n(() => {\n    function* generatorFunction() {\n        yield 1;\n        try {\n            yield 2;\n            yield 3;\n            yield 4;\n        } finally {\n            yield 5;\n            yield 6;\n            yield 7;\n        }\n        yield 8;\n    };\n    let generator = generatorFunction();\n    console.log(\"[generator]  [test-\" + 2 + \"]  [generator.next()] = \", generator.next());\n    console.log(\"[generator]  [test-\" + 2 + \"]  [generator.next()] = \", generator.next());\n    console.log(\"[generator]  [test-\" + 2 + \"]  [generator.return(2233)] = \", generator.return(2233));\n    console.log(\"[generator]  [test-\" + 2 + \"]  [generator.next()] = \", generator.next());\n    console.log(\"[generator]  [test-\" + 2 + \"]  [generator.next()] = \", generator.next());\n    // 一定要等到 finally 执行完，才会执行 return\n    console.log(\"[generator]  [test-\" + 2 + \"]  [generator.next()] = \", generator.next());\n})();"]}