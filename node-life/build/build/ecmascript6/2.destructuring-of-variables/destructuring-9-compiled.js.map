{"version":3,"sources":["destructuring-9.js"],"names":[],"mappings":"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","file":"destructuring-9-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/***********************\n * 变量的解构赋值的用途 *\n ***********************/\n\n/**\n * 交换变量的值\n */\nvar v1 = 16;\nvar v2 = 26;\n[v1, v2] = [v2, v1];\nconsole.log(\"[destructuring]\\t\\t[test-\" + 1 + \"]\\t\\t[v1] = \" + v1);\nconsole.log(\"[destructuring]\\t\\t[test-\" + 1 + \"]\\t\\t[v2] = \" + v2);\nconsole.log(\"\");\n\n/**\n * 从函数返回多个值\n * 数组\n * 对象\n */\nfunction f1() {\n    return [261, 262, 263];\n}\nvar [v3,v4,v5] = f1();\nconsole.log(\"[destructuring]\\t\\t[test-\" + 2 + \"]\\t\\t[v3] = \" + v3);\nconsole.log(\"[destructuring]\\t\\t[test-\" + 2 + \"]\\t\\t[v4] = \" + v4);\nconsole.log(\"[destructuring]\\t\\t[test-\" + 2 + \"]\\t\\t[v5] = \" + v5);\nfunction f2() {\n    return {\n        v6: 265,\n        v7: 266\n    };\n}\nvar {v6, v7} = f2();\nconsole.log(\"[destructuring]\\t\\t[test-\" + 2 + \"]\\t\\t[v6] = \" + v6);\nconsole.log(\"[destructuring]\\t\\t[test-\" + 2 + \"]\\t\\t[v7] = \" + v7);\nconsole.log(\"\");\n\n/**\n * 函数参数的定义\n */\n// 参数是一组有次序的值\nfunction f3([x, y, z]) {\n    return x + y + z;\n}\nconsole.log(\"[destructuring]\\t\\t[test-\" + 3 + \"]\\t\\t[f3([1, 2, 3])] = \" + f3([1, 2, 3]));\n// 参数是一组无次序的值\nfunction f4({x, y, z}) {\n    return x + y + z;\n}\nconsole.log(\"[destructuring]\\t\\t[test-\" + 3 + \"]\\t\\t[f4({z: 3, y: 2, x: 1})] = \" + f4({\n        z: 3,\n        y: 2,\n        x: 1\n    }));\nconsole.log(\"\");\n\n/**\n * 提取 JSON 数据\n */\nvar json1 = {\n    camnter: \"CaMnter\",\n    number: 26,\n    sign: \"Save you from anything\"\n};\nlet {sign, number, camnter} = json1;\nconsole.log(\"[destructuring]\\t\\t[test-\" + 4 + \"]\\t\\t[camnter] = \" + camnter);\nconsole.log(\"[destructuring]\\t\\t[test-\" + 4 + \"]\\t\\t[sign] = \" + sign);\nconsole.log(\"[destructuring]\\t\\t[test-\" + 4 + \"]\\t\\t[number] = \" + number);\nconsole.log(\"\");\n\n/**\n * 函数参数的默认值\n */\nvar o1 = {};\no1.save = function (tag, {\n    camnter= \"CaMnter\",\n    number=26,\n    sign=\"Save you from anything\"\n}) {\n    console.log(\"[destructuring]\\t\\t[test-\" + 5 + \"]\\t\\t[tag] = \" + tag);\n    console.log(\"[destructuring]\\t\\t[test-\" + 5 + \"]\\t\\t[camnter] = \" + camnter);\n    console.log(\"[destructuring]\\t\\t[test-\" + 5 + \"]\\t\\t[sign] = \" + sign);\n    console.log(\"[destructuring]\\t\\t[test-\" + 5 + \"]\\t\\t[number] = \" + number);\n    console.log(\"\");\n};\no1.save(\"saveFunction1\", {});\no1.save(\"saveFunction2\", {camnter: \"saveFunction2-CaMnter\"});\no1.save(\"saveFunction3\", {camnter: \"saveFunction3-CaMnter\", number: \"saveFunction3-26\"});\no1.save(\"saveFunction4\", {\n    camnter: \"saveFunction4-CaMnter\",\n    number: \"saveFunction4-26\",\n    sign: \"saveFunction4-Save you from anything\"\n});\n\n/**\n * 遍历 Map 结构\n */\nvar map = new Map();\nmap.set('camnter', 'CaMnter');\nmap.set('number', '26');\nmap.set('sign', 'Save you from anything');\nfor (let [key,value] of map) {\n    console.log(\"[destructuring]\\t\\t[test-\" + 6 + \"]\\t\\t[key] = \" + key + \"\\t\\t[value] = \" + value);\n}\nconsole.log(\"\");\n// 获取键名\nfor (let [key] of map) {\n    console.log(\"[destructuring]\\t\\t[test-\" + 6 + \"]\\t\\t[key] = \" + key);\n}\nconsole.log(\"\");\n// 获取键值\nfor (let [,value] of map) {\n    console.log(\"[destructuring]\\t\\t[test-\" + 6 + \"]\\t\\t[value] = \" + value);\n}\nconsole.log(\"\");\n\n/**\n * 输入模块的指定方法\n */\nconst { SourceMapConsumer, SourceNode } = require(\"source-map\");\n"]}