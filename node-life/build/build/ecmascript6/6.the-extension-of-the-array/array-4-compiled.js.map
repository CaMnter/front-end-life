{"version":3,"sources":["array-4.js"],"names":[],"mappings":"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","file":"array-4-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/**************\n * includes() *\n **************/\n\n/**\n * Array.prototype.includes 方法返回一个布尔值，表示某个数组是否包含给定的值，与字符串的 includes 方法类\n * 似。该方法属于 ES7，但 Babel 转码器已经支持\n */\n\n/**\n * ES6 以下部署 includes\n */\nconst arrayIncludes = (()=> Array.prototype.includes ?\n    (array, value)=>array.includes(value) :\n    (array, value)=>array.some(el=>el === value))();\n\n/**\n * 第二个参数表示搜索的起始位置，默认为 0 。如果第二个参数为负数，则表示倒数的位置，如果这时它大于数组长度\n * （比如第二个参数为 -4，但数组长度为 3），则会重置为从 0 开始\n */\nconsole.log(\"[array]\\t\\t[test-\" + 1 + \"]\\t\\t[arrayIncludes(['Save', 'you', 'from', 'anything'], 'Save')] = \" + arrayIncludes(['Save', 'you', 'from', 'anything'], 'Save'));\nconsole.log(\"\");\n\n\n/**************\n * 数组的空位 *\n **************/\n\n/**\n * 数组的空位指，数组的某一个位置没有任何值。比如，Array 构造函数返回的数组都是空位\n */\nconsole.log(\"[array]\\t\\t[test-\" + 2 + \"]\\t\\t[new Array(3)] = \" + new Array(7));\nconsole.log(\"\");\n\n/**\n * 空位不是 undefined，一个位置的值等于 undefined，依然是有值的。空位是没有任何值，in 运算符可以说明这一点\n */\nconsole.log(\"[array]\\t\\t[test-\" + 3 + \"]\\t\\t[(0 in [undefined])] = \" + (0 in [undefined]));\nconsole.log(\"[array]\\t\\t[test-\" + 3 + \"]\\t\\t[(0 in [, , , , ,])] = \" + (0 in [, , , , ,]));\nconsole.log(\"\");\n\n\n/**\n * ES5 对空位的处理，已经很不一致了，大多数情况下会忽略空位\n *\n * forEach(), filter(), every() 和some()都会跳过空位\n * map() 会跳过空位，但会保留这个值\n * join() 和 toString() 会将空位视为 undefined，而 undefined 和 null 会被处理成空字符串\n */\n[, , 'S'].forEach((value, index) => console.log(\"[array]\\t\\t[test-\" + 4 + \"]\\t\\t[value] = \" + value));\nconsole.log(\"[array]\\t\\t[test-\" + 4 + \"]\\t\\t[[, , 'S'].filter(x => x == true)] = \" + [, , 'S'].filter(x => true));\nconsole.log(\"[array]\\t\\t[test-\" + 4 + \"]\\t\\t[[, , 'S'].every(x => x == 'S')] = \" + [, , 'S'].every(x => x == 'S'));\nconsole.log(\"[array]\\t\\t[test-\" + 4 + \"]\\t\\t[[, , 'S'].some(x => x != 'S')] = \" + [, , 'S'].some(x => x != 'S'));\nconsole.log(\"[array]\\t\\t[test-\" + 4 + \"]\\t\\t[[, , 'S'].map(x => 67)] = \" + [, , 'S'].map(x => 67));\nconsole.log(\"\");\nconsole.log(\"[array]\\t\\t[test-\" + 5 + \"]\\t\\t[['S', , 'a'].join(`#`)] = \" + ['S', , 'a'].join(`#`));\nconsole.log(\"[array]\\t\\t[test-\" + 5 + \"]\\t\\t[['S', , 'a'].toString()] = \" + ['S', , 'a'].toString());\nconsole.log(\"\");\n\n/**\n * ES6 则是明确将空位转为 undefined\n */\n\n/**\n * Array.from 方法会将数组的空位，转为 undefined，也就是说，这个方法不会忽略空位\n */\nconsole.log(\"[array]\\t\\t[test-\" + 6 + \"]\\t\\t[Array.from(['S', , 'a'])] = \" + Array.from(['S', , 'a']));\n\n/**\n * 扩展运算符（...）也会将空位转为 undefined\n */\nconsole.log(\"[array]\\t\\t[test-\" + 6 + \"]\\t\\t[[...['S', , 'a', , 'v', , , 'e']]] = \" + [...['S', , 'a', , 'v', , , 'e']]);\n\n/**\n * copyWithin() 会连空位一起拷贝\n */\nconsole.log(\"[array]\\t\\t[test-\" + 6 + \"]\\t\\t[[, 'S', 'a', , 'v', 'e'].copyWithin(2, 0)] = \" + [, 'S', 'a', , 'v', 'e'].copyWithin(2, 0));\n\n/**\n * fill() 会将空位视为正常的数组位置\n */\nconsole.log(\"[array]\\t\\t[test-\" + 6 + \"]\\t\\t[new Array(6).fill('S')] = \" + new Array(6).fill('S'));\n\n/**\n * for...of 循环也会遍历空位\n */\nlet array = [, , , , ,];\nfor (let index of array) {\n    console.log(\"[array]\\t\\t[test-\" + 6 + \"]\\t\\t[index] = \" + index);\n}\nconsole.log(\"\");\n\n/**\n * entries()、keys()、values()、find() 和 findIndex() 会将空位处理成 undefined\n */\nconsole.log(\"[array]\\t\\t[test-\" + 7 + \"]\\t\\t[[...[, 'S'].entries()]] = \" + [...[, 'S'].entries()]);\nconsole.log(\"[array]\\t\\t[test-\" + 7 + \"]\\t\\t[[...[, 'S'].keys()]] = \" + [...[, 'S'].keys()]);\n// console.log(\"[array]\\t\\t[test-\" + 7 + \"]\\t\\t[[...[, 'S'].values()]] = \" + [...[, 'S'].values()]);\nconsole.log(\"[array]\\t\\t[test-\" + 7 + \"]\\t\\t[[, 'S'].find(x => true)] = \" + [, 'S'].find(x => true));\nconsole.log(\"[array]\\t\\t[test-\" + 7 + \"]\\t\\t[[, 'S'].findIndex(x => true)] = \" + [, 'S'].findIndex(x => true));\n\n\n\n\n\n"]}