{"version":3,"sources":["function-11.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;;AAIA;;;;;AAKA,SAAS,MAAT,CAAgB,MAAhB,EAAwB;AACpB,WAAO;AACH,cAAM,cAAU,KAAV,EAAiB;AACnB,mBAAO;AACH,uBAAO,eAAU,KAAV,EAAiB;AACpB,0BAAM,MAAN,CAAa,MAAM,OAAN,CAAc,KAAd,IAAuB,CAApC,EAAuC,CAAvC,EAA0C,MAA1C;AACA,2BAAO,KAAP;AACH;AAJE,aAAP;AAMH;AARE,KAAP;AAUH;AACD,QAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,2CAA7B,GAA2E,OAAO,CAAP,EAAU,IAAV,CAAe,CAAC,CAAD,EAAI,CAAJ,CAAf,EAAuB,KAAvB,CAA6B,CAA7B,CAAvF;AACA,QAAQ,GAAR,CAAY,EAAZ;;AAGA;;;;;AAKA,IAAI,iBAAiB,SAAjB,cAAiB;AAAA,WAAW;AAC5B,cAAM;AAAA,mBAAS;AACX,uBAAO,sBAAQ;AACX,0BAAM,MAAN,CAAa,MAAM,OAAN,CAAc,KAAd,IAAuB,CAApC,EAAuC,CAAvC,EAA0C,MAA1C;AACA,2BAAO,KAAP;AACH;AAJU,aAAT;AAAA;AADsB,KAAX;AAAA,CAArB;AAQA,QAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,mDAA7B,GAAmF,eAAe,CAAf,EAAkB,IAAlB,CAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,EAA+B,KAA/B,CAAqC,CAArC,CAA/F;AACA,QAAQ,GAAR,CAAY,EAAZ;;AAGA;;;AAGA,IAAM,QAAQ,SAAR,KAAQ;AAAA,WAAK,IAAI,CAAT;AAAA,CAAd;AACA,IAAM,QAAQ,SAAR,KAAQ;AAAA,WAAK,IAAI,CAAT;AAAA,CAAd;AACA,QAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,2BAA7B,GAA2D,MAAM,MAAM,CAAN,CAAN,CAAvE;;AAEA;;;AAGA;AACA;;AAEA;AACA,IAAI,MAAM,SAAN,GAAM;AAAA,WAAM;AAAA,eAAK,EAAE;AAAA,mBAAK,EAAE,CAAF,EAAK,CAAL,CAAL;AAAA,SAAF,CAAL;AAAA,KAAD,CACd;AAAA,eAAK,EAAE;AAAA,mBAAK,EAAE,CAAF,EAAK,CAAL,CAAL;AAAA,SAAF,CAAL;AAAA,KADc,CAAL;AAAA,CAAV","file":"function-11-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/*****************\n * 嵌套的箭头函数 *\n *****************/\n\n/**\n * ES5\n *\n * 多重嵌套函数.\n */\nfunction insert(target) {\n    return {\n        into: function (array) {\n            return {\n                after: function (value) {\n                    array.splice(array.indexOf(value) + 1, 0, target);\n                    return array;\n                }\n            }\n        }\n    }\n}\nconsole.log(\"[function]\\t\\t[test-\" + 1 + \"]\\t\\t[insert(6).into([2, 7]).after(2)] = \" + insert(6).into([2, 7]).after(2));\nconsole.log(\"\");\n\n\n/**\n * ES6\n *\n * 箭头函数嵌套\n */\nlet insertFunction = target => ({\n    into: array=> ({\n        after: value=> {\n            array.splice(array.indexOf(value) + 1, 0, target);\n            return array;\n        }\n    })\n});\nconsole.log(\"[function]\\t\\t[test-\" + 2 + \"]\\t\\t[insertFunction(6).into([2, 7]).after(2)] = \" + insertFunction(6).into([2, 7]).after(2));\nconsole.log(\"\");\n\n\n/**\n * 部署管道机制（pipeline）\n */\nconst outer = z => z + 1;\nconst inter = z => z * 2;\nconsole.log(\"[function]\\t\\t[test-\" + 3 + \"]\\t\\t[outer(inter(6))] = \" + outer(inter(6)));\n\n/**\n * 方便地改写 λ 演算\n */\n// ES5\n// fix = λf.(λx.f(λv.x(x)(v)))(λx.f(λv.x(x)(v)));\n\n// ES6\nvar fix = f => (x => f(v => x(x)(v)))\n(x => f(v => x(x)(v)));\n"]}