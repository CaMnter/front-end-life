{"version":3,"sources":["function-3.js"],"names":[],"mappings":";;AAAA;;;;AAKA;;;;AAIA;;;;;AAKA,IAAI,KAAK,CAAT;AACA,SAAS,EAAT,CAAY,EAAZ,EAAyB;AAAA,QAAT,EAAS,uEAAJ,EAAI;;AACrB,YAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,cAA7B,GAA8C,EAA1D;AACH;AACD,GAAG,CAAH;AACA,QAAQ,GAAR,CAAY,EAAZ;AACA,SAAS,EAAT;AAAA,QAAY,EAAZ,uEAAiB,EAAjB;AAAA,uBAAqB;AACjB,YAAI,KAAK,CAAT;AACA,gBAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,cAA7B,GAA8C,EAA1D;AACH,KAHD;AAAA;AAIA;AACA,SAAS,EAAT;AAAA,QAAY,EAAZ,uEAAiB,EAAjB;AAAA,uBAAqB;AACjB,YAAI,KAAK,CAAT;AACA,gBAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,cAA7B,GAA8C,EAA1D;AACH,KAHD;AAAA;AAIA;;AAEA;;;;;;AAMA,IAAI,KAAK,MAAT;AACA,SAAS,EAAT,GAA4B;AAAA,QAAhB,IAAgB,uEAAT;AAAA,eAAK,EAAL;AAAA,KAAS;;AACxB,QAAI,KAAK,wBAAT;AACA,YAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,cAA7B,GAA8C,EAA1D;AACA,YAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,kBAA7B,GAAkD,MAA9D;AACH;AACD;AACA,QAAQ,GAAR,CAAY,EAAZ;AACA,SAAS,EAAT,GAA4B;AAAA,QAAhB,IAAgB,uEAAT;AAAA,eAAK,EAAL;AAAA,KAAS;;AACxB,QAAI,KAAK,wBAAT;AACA,YAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,cAA7B,GAA8C,EAA1D;AACA;AACH;AACD;AACA,QAAQ,GAAR,CAAY,EAAZ;;AAEA;;;;AAIA,IAAI,KAAK,EAAT;AACA,SAAS,EAAT,CAAY,EAAZ,EAEG;AAAA,QAFa,CAEb,uEAFiB,YAAY;AAC5B,aAAK,CAAL;AACH,KAAE;;AACC,QAAI,KAAK,CAAT;AACA;AACA,YAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,cAA7B,GAA8C,EAA1D;AACH;AACD;AACA,QAAQ,GAAR,CAAY,EAAZ;;AAEA;;;AAGA,IAAI,KAAK,GAAT;AACA,SAAS,EAAT,CAAY,EAAZ,EAEG;AAAA,QAFa,CAEb,uEAFiB,YAAY;AAC5B,aAAK,CAAL;AACH,KAAE;;AACC,SAAK,CAAL;AACA;AACA,YAAQ,GAAR,CAAY,yBAAyB,CAAzB,GAA6B,cAA7B,GAA8C,EAA1D;AACH;AACD;;AAGA;;;;AAIA,SAAS,cAAT,GAA0B;AACtB,UAAM,IAAI,KAAJ,CAAU,mBAAV,CAAN;AACH;;AAED,SAAS,EAAT,GAAkC;AAAA,QAAtB,CAAsB,uEAAlB,gBAAkB;;AAC9B,WAAO,CAAP;AACH;AACD;;AAEA;;;;AAIA,SAAS,EAAT,GAA2B;AAAA,QAAf,CAAe,uEAAX,SAAW;;AACvB,WAAO,CAAP;AACH;AACD","file":"function-3-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n\n/**********\n * 作用域 *\n **********/\n\n/**\n * 先是当前函数的作用域，然后才是全局作用域\n *\n * 函数作用域内部的变量已经生成，不是全局变量\n */\nvar v1 = 6;\nfunction f1(v1, v2 = v1) {\n    console.log(\"[function]\\t\\t[test-\" + 1 + \"]\\t\\t[v2] = \" + v2);\n}\nf1(7);\nconsole.log(\"\");\nfunction f2(v3 = v1) {\n    let v1 = 7;\n    console.log(\"[function]\\t\\t[test-\" + 2 + \"]\\t\\t[v3] = \" + v3);\n}\n// f2();  // error\nfunction f3(v4 = v5) {\n    let v5 = 7;\n    console.log(\"[function]\\t\\t[test-\" + 3 + \"]\\t\\t[v4] = \" + v4);\n}\n// f3();  // error\n\n/**\n * 如果参数的默认值是一个函数，该函数的作用域是其声明时所在的作用域\n *\n * func 的默认值是一个 匿名函数, 返回 s1\n * func 的作用域还没形成, 所以匿名函数 s1 指向外层作用域的 s1\n */\nlet s1 = \"Save\";\nfunction f4(func = v => s1) {\n    let s1 = \"Save you from anything\"\n    console.log(\"[function]\\t\\t[test-\" + 4 + \"]\\t\\t[s1] = \" + s1);\n    console.log(\"[function]\\t\\t[test-\" + 4 + \"]\\t\\t[func()] = \" + func());\n}\nf4();\nconsole.log(\"\");\nfunction f5(func = v => s2) {\n    let s2 = \"Save you from anything\"\n    console.log(\"[function]\\t\\t[test-\" + 5 + \"]\\t\\t[s2] = \" + s2);\n    // console.log(\"[function]\\t\\t[test-\" + 5 + \"]\\t\\t[func()] = \" + func()); // s2 未定义\n}\nf5();\nconsole.log(\"\");\n\n/**\n * 函数内部重新定义 v6\n * 但是 和 y 函数内的 v6 是不一样的\n */\nvar v6 = 23;\nfunction f6(v6, y = function () {\n    v6 = 2\n}) {\n    var v6 = 3;\n    y();\n    console.log(\"[function]\\t\\t[test-\" + 6 + \"]\\t\\t[v6] = \" + v6);\n}\nf6();\nconsole.log(\"\");\n\n/**\n * 去掉 var 就一样了\n */\nvar v7 = 237;\nfunction f7(v7, y = function () {\n    v7 = 2;\n}) {\n    v7 = 3;\n    y();\n    console.log(\"[function]\\t\\t[test-\" + 6 + \"]\\t\\t[v7] = \" + v7);\n}\nf7();\n\n\n/*********************\n * 应用一: 参数不可省 *\n *********************/\n\nfunction throwIfMissing() {\n    throw new Error('Missing parameter');\n}\n\nfunction f8(v = throwIfMissing()) {\n    return v;\n}\n// f8();\n\n/*******************\n * 应用一: 参数可省 *\n *******************/\n\nfunction f9(v = undefined) {\n    return v;\n}\nf9();\n"]}