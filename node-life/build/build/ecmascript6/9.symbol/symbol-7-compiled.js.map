{"version":3,"sources":["symbol-7.js"],"names":[],"mappings":";;;;;;AAAA;;;;AAIA;;;;AAIA;;;;;;;;;;;;AAYA;;;;IAIM,U;;;;;;aACD,OAAO,W;8BAAa,K,EAAO;AACxB,mBAAO,iBAAiB,KAAxB;AACH;;;;;;AAEL,CAAC,YAAK;AACF,YAAQ,GAAR,CAAY,uBAAuB,CAAvB,GAA2B,+CAAvC,EAAwF,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,aAAqB,IAAI,UAAJ,EAA7G,EAA6H,IAA7H;AACH,CAFD;;AAKA;;;;IAGM,I;;;;;;aACD,OAAO,W;8BAAa,M,EAAO;AACxB,mBAAO,OAAO,MAAP,IAAgB,CAAhB,KAAsB,CAA7B;AACH;;;;;;AAEL,CAAC,YAAK;AACF,YAAQ,GAAR,CAAY,uBAAuB,CAAvB,GAA2B,iCAAvC,EAA0E,aAAa,IAAI,IAAJ,EAAvF;AACA,YAAQ,GAAR,CAAY,uBAAuB,CAAvB,GAA2B,iCAAvC,EAA0E,aAAa,IAAI,IAAJ,EAAvF;AACA,YAAQ,GAAR,CAAY,uBAAuB,CAAvB,GAA2B,iCAAvC,EAA0E,aAAa,IAAI,IAAJ,EAAvF,EAAiG,IAAjG;AACH,CAJD","file":"symbol-7-compiled.js","sourcesContent":["/**\n * Created by：CaMnter\n */\n\n/**********************\n * Symbol.hasInstance *\n **********************/\n\n/**\n * 对象的Symbol.hasInstance属性\n * 指向一个内部方法\n *\n * 当其他对象使用instanceof运算符\n * 判断是否为该对象的实例时\n * 会调用这个方法\n *\n * foo instanceof Foo 在语言内部\n * 实际调用的是 Foo[Symbol.hasInstance](foo)\n */\n\n/**\n * 重写 ArrayClass 的 [Symbol.hasInstance](??) 做试验\n * 改写成任何进来都判断是否是 Array 类型\n */\nclass ArrayClass {\n    [Symbol.hasInstance](array) {\n        return array instanceof Array;\n    }\n}\n(()=> {\n    console.log(\"[symbol]\\t\\t[test-\" + 1 + \"]\\t\\t[[2, 3, 3] instanceof new ArrayClass] = \", [2, 3, 3] instanceof new ArrayClass, '\\n');\n})();\n\n\n/**\n * 判断是否是 偶数\n */\nclass Even {\n    [Symbol.hasInstance](value) {\n        return Number(value) % 2 === 0;\n    }\n}\n(()=> {\n    console.log(\"[symbol]\\t\\t[test-\" + 2 + \"]\\t\\t[1 instanceof new Even] = \", 1 instanceof new Even);\n    console.log(\"[symbol]\\t\\t[test-\" + 2 + \"]\\t\\t[2 instanceof new Even] = \", 2 instanceof new Even);\n    console.log(\"[symbol]\\t\\t[test-\" + 2 + \"]\\t\\t[3 instanceof new Even] = \", 3 instanceof new Even, '\\n');\n})();"]}